name: "Devin PR Review"

on:
  pull_request:
    types: [labeled]

env:
  label_name: epic

jobs:
  devin_pr_review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Request Devin Code Review
        if: ${{ github.event.label.name == env.label_name }}
        env:
          DEVIN_API_KEY: ${{ secrets.DEVIN_API_KEY }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: |
          JSON_PAYLOAD=$(cat <<EOF
          {
            "prompt": "Please review this pull request and look for bugs and security issues. PR: ${PR_URL} Only report on bugs and potential vulnerabilities you find. Be concise. Adapt your response language to match the language used in the PR title and description (e.g., if the PR is written in Japanese, respond in Japanese; if in English, respond in English). After completing the review, make sure to run 'gh pr review' to submit your feedback."
          }
          EOF
          )
          
          echo "üöÄ Requesting Devin code review..."
          RESPONSE=$(curl -s -X POST "https://api.devin.ai/v1/sessions" \
               -H "Authorization: Bearer $DEVIN_API_KEY" \
               -H "Content-Type: application/json" \
               -d "$JSON_PAYLOAD")
          
          if [ $? -ne 0 ]; then
            echo "‚ùå Failed to start Devin session"
            exit 1
          fi
          
          SESSION_ID=$(echo "$RESPONSE" | jq -r '.session_id // empty')
          if [ -z "$SESSION_ID" ]; then
            echo "‚ùå No session ID returned from Devin API"
            echo "Response: $RESPONSE"
            exit 1
          fi
          
          echo "‚úÖ Devin session started: $SESSION_ID"
          echo "SESSION_ID=$SESSION_ID" >> $GITHUB_ENV

      - name: Monitor Devin Session
        if: ${{ github.event.label.name == env.label_name }}
        env:
          DEVIN_API_KEY: ${{ secrets.DEVIN_API_KEY }}
        run: |
          SESSION_ID="${{ env.SESSION_ID }}"
          MAX_ATTEMPTS=30  # ÊúÄÂ§ß30ÂàÜÂæÖÊ©ü
          ATTEMPT=0
          
          echo "üîç Monitoring Devin session: $SESSION_ID"
          
          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            echo "‚è≥ Checking session status (attempt $((ATTEMPT + 1))/$MAX_ATTEMPTS)..."
            
            STATUS_RESPONSE=$(curl -s -X GET "https://api.devin.ai/v1/sessions/$SESSION_ID" \
                 -H "Authorization: Bearer $DEVIN_API_KEY")
            
            if [ $? -ne 0 ]; then
              echo "‚ö†Ô∏è Failed to get session status"
              ATTEMPT=$((ATTEMPT + 1))
              sleep 60
              continue
            fi
            
            STATUS=$(echo "$STATUS_RESPONSE" | jq -r '.status // "unknown"')
            echo "üìä Current status: $STATUS"
            
            case "$STATUS" in
              "completed")
                echo "‚úÖ Devin session completed successfully!"
                
                # „É¨„Éì„É•„ÉºÁµêÊûú„ÇíÂèñÂæó
                REVIEW_RESULT=$(echo "$STATUS_RESPONSE" | jq -r '.result // "No review result available"')
                echo "üìù Review result:"
                echo "$REVIEW_RESULT"
                
                # PR„Å´„Ç≥„É°„É≥„Éà„ÇíÊäïÁ®ø
                gh pr comment ${{ github.event.pull_request.number }} --body "## ü§ñ Devin Code Review Results

$REVIEW_RESULT

---
*Automated review by Devin AI*"
                
                exit 0
                ;;
              "failed"|"error")
                echo "‚ùå Devin session failed"
                ERROR_MSG=$(echo "$STATUS_RESPONSE" | jq -r '.error_message // "Unknown error"')
                echo "Error: $ERROR_MSG"
                
                gh pr comment ${{ github.event.pull_request.number }} --body "## ‚ö†Ô∏è Devin Code Review Failed

The automated code review encountered an error: $ERROR_MSG

Please try again or review manually.

---
*Automated review by Devin AI*"
                
                exit 1
                ;;
              "running"|"pending")
                echo "üîÑ Session still in progress..."
                ;;
              *)
                echo "‚ùì Unknown status: $STATUS"
                ;;
            esac
            
            ATTEMPT=$((ATTEMPT + 1))
            sleep 60
          done
          
          echo "‚è∞ Timeout: Devin session took too long to complete"
          gh pr comment ${{ github.event.pull_request.number }} --body "## ‚è∞ Devin Code Review Timeout

The automated code review is taking longer than expected. The session may still be running in the background.

Session ID: $SESSION_ID

---
*Automated review by Devin AI*"
          
          exit 1

      - name: Cleanup on Failure
        if: ${{ failure() && github.event.label.name == env.label_name }}
        env:
          DEVIN_API_KEY: ${{ secrets.DEVIN_API_KEY }}
        run: |
          SESSION_ID="${{ env.SESSION_ID }}"
          if [ -n "$SESSION_ID" ]; then
            echo "üßπ Cleaning up failed session: $SESSION_ID"
            curl -s -X DELETE "https://api.devin.ai/v1/sessions/$SESSION_ID" \
                 -H "Authorization: Bearer $DEVIN_API_KEY" || true
          fi