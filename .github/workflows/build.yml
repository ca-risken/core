name: RISKEN Core Build 
env:
  IMAGE_PREFIX: "risken-core"
  INSTALL_GO_VERSION: "1.23.3"
  GOLANGCI_LINT_VERSION: v1.62.0
  AWS_XRAY_SDK_DISABLED: TRUE
on: [push]
jobs:
  Build-Job:
    runs-on:
      - codebuild-mimosa-core-pr-runner-${{ github.run_id }}-${{ github.run_attempt }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check
        run: |
          echo "$AWS_DEFAULT_REGION"
          echo "$GITHUB_WORKSPACE"

      - name: Setup environment and credentials
        run: |
          export DOCKER_USER=$(aws ssm get-parameter --name "/build/DOCKER_USER" --with-decryption --query 'Parameter.Value' --output text)
          export DOCKER_TOKEN=$(aws ssm get-parameter --name "/build/DOCKER_TOKEN" --with-decryption --query 'Parameter.Value' --output text)
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)

          echo "DOCKER_USER=${DOCKER_USER}" >> $GITHUB_ENV
          echo "DOCKER_TOKEN=${DOCKER_TOKEN}" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}" >> $GITHUB_ENV
          echo "SRC=${GITHUB_WORKSPACE}/src" >> $GITHUB_ENV
          echo "BUILD_OPT=--no-cache --pull" >> $GITHUB_ENV
          echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com" >> $GITHUB_ENV
          
      - name: Install Go and tools
        run: |
          cd /root/.goenv/plugins/go-build/../.. && git pull && cd -
          goenv install ${{ env.INSTALL_GO_VERSION }}
          goenv global ${{ env.INSTALL_GO_VERSION }}
          go version
          
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${{ env.GOLANGCI_LINT_VERSION }}
          mv $(go env GOPATH)/bin/golangci-lint /usr/local/bin/
          golangci-lint --version

      - name: Lint and test
        run: |
          echo "Lint the sources..."
          make lint -k
          echo "Testing the sources..."
          make test -j

      - name: Docker login and build
        if: github.event_name == 'push'
        run: |
          echo "Logging in to Amazon ECR..."
          $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
          
          if [[ -n "${ DOCKER_USER }" ]] && [[ -n "${ DOCKER_TOKEN }" ]]; then
            echo 'Logging in to Docker Hub...'
            echo "${ DOCKER_TOKEN }" | docker login -u ${ DOCKER_USER } --password-stdin
          fi
          
          echo "Build gateway started on $(date)"
          make build-ci -j BUILD_OPT="${ BUILD_OPT }" IMAGE_PREFIX=${{ IMAGE_PREFIX }} IMAGE_TAG=${ TAG } IMAGE_REGISTRY=${ REGISTRY }