version: "3.8"

services:
  gateway:
    networks:
      - core
      - local-shared
    build:
      context: src/gateway
      args:
        - GITHUB_USER=${GITHUB_USER}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    depends_on:
      - iam
      - finding
    environment:
      - PORT=8080
      - FINDING_SVC_ADDR=${FINDING_SVC_ADDR}
    ports:
      - "8080:8080"

  finding:
    networks:
      - core
      - local-shared
    build:
      context: src/finding
      args:
        - GITHUB_USER=${GITHUB_USER}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    depends_on:
      - iam
    environment:
      - PORT=8081
      - DB_MASTER_HOST=${DB_MASTER_HOST}
      - DB_MASTER_USER=${DB_MASTER_USER}
      - DB_MASTER_PASSWORD=${DB_MASTER_PASSWORD}
      - DB_SLAVE_HOST=${DB_SLAVE_HOST}
      - DB_SLAVE_USER=${DB_SLAVE_USER}
      - DB_SLAVE_PASSWORD=${DB_SLAVE_PASSWORD}
      - DB_PORT=3306
      - DB_SCHEMA=mimosa
      - DB_LOG_MODE=${DB_LOG_MODE}
    ports:
      - "8081:8081" # docker-compose外にexposeする必要はないので本来は"8081"だが、grpcurlなどのDebug目的でhost側のportも開放

  iam:
    networks:
      - core
      - local-shared
    build:
      context: src/iam
      args:
        - GITHUB_USER=${GITHUB_USER}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    environment:
      - PORT=8082
      - DB_MASTER_HOST=${DB_MASTER_HOST}
      - DB_MASTER_USER=${DB_MASTER_USER}
      - DB_MASTER_PASSWORD=${DB_MASTER_PASSWORD}
      - DB_SLAVE_HOST=${DB_SLAVE_HOST}
      - DB_SLAVE_USER=${DB_SLAVE_USER}
      - DB_SLAVE_PASSWORD=${DB_SLAVE_PASSWORD}
      - DB_PORT=3306
      - DB_SCHEMA=mimosa
      - DB_LOG_MODE=${DB_LOG_MODE}
    ports:
      - "8082:8082" # docker-compose外にexposeする必要はないので本来は"8081"だが、grpcurlなどのDebug目的でhost側のportも開放

networks:
  core:
    driver: bridge
    attachable: true
  local-shared:
    external: true
    
