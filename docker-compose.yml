version: "3.8"

services:
  finding:
    networks:
      - core
      - local-shared
    build:
      context: src/finding
      args:
        - GITHUB_USER=${GITHUB_USER}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    depends_on:
      - iam
    environment:
      - PORT=8001
      - DB_MASTER_HOST=${DB_MASTER_HOST}
      - DB_MASTER_USER=${DB_MASTER_USER}
      - DB_MASTER_PASSWORD=${DB_MASTER_PASSWORD}
      - DB_SLAVE_HOST=${DB_SLAVE_HOST}
      - DB_SLAVE_USER=${DB_SLAVE_USER}
      - DB_SLAVE_PASSWORD=${DB_SLAVE_PASSWORD}
      - DB_PORT=3306
      - DB_SCHEMA=mimosa
      - DB_LOG_MODE=${DB_LOG_MODE}
    ports:
      - "8001:8001" # 本来はdocker-compose外にexposeする必要はない（grpcurlなどのDebug目的でhost側のportも開放）

  iam:
    networks:
      - core
      - local-shared
    build:
      context: src/iam
      args:
        - GITHUB_USER=${GITHUB_USER}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    environment:
      - PORT=8002
      - DB_MASTER_HOST=${DB_MASTER_HOST}
      - DB_MASTER_USER=${DB_MASTER_USER}
      - DB_MASTER_PASSWORD=${DB_MASTER_PASSWORD}
      - DB_SLAVE_HOST=${DB_SLAVE_HOST}
      - DB_SLAVE_USER=${DB_SLAVE_USER}
      - DB_SLAVE_PASSWORD=${DB_SLAVE_PASSWORD}
      - DB_PORT=3306
      - DB_SCHEMA=mimosa
      - DB_LOG_MODE=${DB_LOG_MODE}
    ports:
      - "8002:8002" # 本来はdocker-compose外にexposeする必要はない（grpcurlなどのDebug目的でhost側のportも開放）

  project:
    networks:
      - core
      - local-shared
    build:
      context: src/project
      args:
        - GITHUB_USER=${GITHUB_USER}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    environment:
      - PORT=8003
      - IAM_SVC_ADDR=${IAM_SVC_ADDR}
      - DB_MASTER_HOST=${DB_MASTER_HOST}
      - DB_MASTER_USER=${DB_MASTER_USER}
      - DB_MASTER_PASSWORD=${DB_MASTER_PASSWORD}
      - DB_SLAVE_HOST=${DB_SLAVE_HOST}
      - DB_SLAVE_USER=${DB_SLAVE_USER}
      - DB_SLAVE_PASSWORD=${DB_SLAVE_PASSWORD}
      - DB_PORT=3306
      - DB_SCHEMA=mimosa
      - DB_LOG_MODE=${DB_LOG_MODE}
    ports:
      - "8003:8003" # 本来はdocker-compose外にexposeする必要はない（grpcurlなどのDebug目的でhost側のportも開放）

  alert:
    networks:
      - core
      - local-shared
    build:
      context: src/alert
      args:
        - GITHUB_USER=${GITHUB_USER}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    environment:
      - PORT=8004
      - FINDING_SVC_ADDR=${FINDING_SVC_ADDR}
      - DB_MASTER_HOST=${DB_MASTER_HOST}
      - DB_MASTER_USER=${DB_MASTER_USER}
      - DB_MASTER_PASSWORD=${DB_MASTER_PASSWORD}
      - DB_SLAVE_HOST=${DB_SLAVE_HOST}
      - DB_SLAVE_USER=${DB_SLAVE_USER}
      - DB_SLAVE_PASSWORD=${DB_SLAVE_PASSWORD}
      - DB_PORT=3306
      - DB_SCHEMA=mimosa
      - DB_LOG_MODE=${DB_LOG_MODE}
      - NOTIFICATION_ALERT_URL=${NOTIFICATION_ALERT_URL}
    ports:
      - "8004:8004" # 本来はdocker-compose外にexposeする必要はない（grpcurlなどのDebug目的でhost側のportも開放）

  report:
    networks:
      - core
      - local-shared
    build:
      context: src/report
      args:
        - GITHUB_USER=${GITHUB_USER}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    environment:
      - PORT=8005
      - FINDING_SVC_ADDR=${FINDING_SVC_ADDR}
      - DB_MASTER_HOST=${DB_MASTER_HOST}
      - DB_MASTER_USER=${DB_MASTER_USER}
      - DB_MASTER_PASSWORD=${DB_MASTER_PASSWORD}
      - DB_SLAVE_HOST=${DB_SLAVE_HOST}
      - DB_SLAVE_USER=${DB_SLAVE_USER}
      - DB_SLAVE_PASSWORD=${DB_SLAVE_PASSWORD}
      - DB_PORT=3306
      - DB_SCHEMA=mimosa
      - DB_LOG_MODE=${DB_LOG_MODE}
    ports:
      - "8005:8005" # 本来はdocker-compose外にexposeする必要はない（grpcurlなどのDebug目的でhost側のportも開放）

networks:
  core:
    driver: bridge
    attachable: true
  local-shared:
    external: true
    
