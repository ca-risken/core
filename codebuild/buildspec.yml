version: 0.2

env:
  variables:
    IMAGE_GATEWAY: "core/gateway"
    IMAGE_FINDING: "core/finding"
    IMAGE_IAM: "core/iam"
  parameter-store:
    GITHUB_USER: "/build/GITHUB_USER"
    GITHUB_TOKEN: "/build/GITHUB_TOKEN"

phases:
  install:
    runtime-versions:
      golang: 1.13
    commands:
      - echo "machine github.com" > ~/.netrc
      - echo "login $GITHUB_USER" >> ~/.netrc
      - echo "password $GITHUB_TOKEN" >> ~/.netrc
  pre_build:
    commands:
      - echo Testing the sources...
      - cd $CODEBUILD_SRC_DIR/proto/finding && go test ./...
      - cd $CODEBUILD_SRC_DIR/proto/iam     && go test ./...
      - cd $CODEBUILD_SRC_DIR/src/gateway   && go test ./...
      - cd $CODEBUILD_SRC_DIR/src/finding   && go test ./...
      - cd $CODEBUILD_SRC_DIR/src/iam       && go test ./...
  
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build gateway started on `date`
      - echo Pushing the Docker images...
      - cd $CODEBUILD_SRC_DIR/src/gateway && docker build --no-cache --pull --build-arg GITHUB_USER=$GITHUB_USER --build-arg GITHUB_TOKEN=$GITHUB_TOKEN -t $IMAGE_GATEWAY:v0.0.$CODEBUILD_BUILD_NUMBER .
      - cd $CODEBUILD_SRC_DIR/src/finding && docker build --no-cache --pull --build-arg GITHUB_USER=$GITHUB_USER --build-arg GITHUB_TOKEN=$GITHUB_TOKEN -t $IMAGE_FINDING:v0.0.$CODEBUILD_BUILD_NUMBER .
      - cd $CODEBUILD_SRC_DIR/src/iam     && docker build --no-cache --pull --build-arg GITHUB_USER=$GITHUB_USER --build-arg GITHUB_TOKEN=$GITHUB_TOKEN -t $IMAGE_IAM:v0.0.$CODEBUILD_BUILD_NUMBER .

      - echo Tagging the images...
      # tag the specific version
      - docker tag $IMAGE_GATEWAY:v0.0.$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_GATEWAY:v0.0.$CODEBUILD_BUILD_NUMBER    
      - docker tag $IMAGE_FINDING:v0.0.$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_FINDING:v0.0.$CODEBUILD_BUILD_NUMBER    
      - docker tag $IMAGE_IAM:v0.0.$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_IAM:v0.0.$CODEBUILD_BUILD_NUMBER    

      # update latest version 
      - docker tag $IMAGE_GATEWAY:v0.0.$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_GATEWAY:latest
      - docker tag $IMAGE_FINDING:v0.0.$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_FINDING:latest
      - docker tag $IMAGE_IAM:v0.0.$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_IAM:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...

      # specific version
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_GATEWAY:v0.0.$CODEBUILD_BUILD_NUMBER
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_FINDING:v0.0.$CODEBUILD_BUILD_NUMBER
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_IAM:v0.0.$CODEBUILD_BUILD_NUMBER

      # latest version
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_GATEWAY:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_FINDING:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_IAM:latest
