version: 0.2

env:
  variables:
    PRIVATE_IMAGE_PREFIX: 'risken-core'
    PUBLIC_REGISTRY: 'public.ecr.aws/risken'
    PUBLIC_IMAGE_PREFIX: 'core'
  parameter-store:
    GITHUB_USER: '/build/GITHUB_USER'
    GITHUB_TOKEN: '/build/GITHUB_TOKEN'

phases:
  install:
    commands:
      - echo "machine github.com" > ~/.netrc
      - echo "login ${GITHUB_USER}" >> ~/.netrc
      - echo "password ${GITHUB_TOKEN}" >> ~/.netrc
  pre_build:
    commands:
      - echo Setting environment variables
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - PRIVATE_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - TAG=${CODEBUILD_WEBHOOK_TRIGGER#tag/}
      - IMAGE_TAG=${TAG}_${OS}_${ARCH}

      - echo Logging in to private Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${PRIVATE_REGISTRY}
  build:
    commands:
      - echo Build gateway started on `date`
      - echo pull images...
      - make pull-image -j IMAGE_PREFIX=${PRIVATE_IMAGE_PREFIX} IMAGE_REGISTRY=${PRIVATE_REGISTRY} IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}

      - echo tag images...
      - SOURCE_IMAGE_PREFIX=${PRIVATE_REGISTRY}/${PRIVATE_IMAGE_PREFIX}
      - make tag-image -j SOURCE_IMAGE_PREFIX=${SOURCE_IMAGE_PREFIX} SOURCE_IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION} IMAGE_REGISTRY=${PUBLIC_REGISTRY} IMAGE_TAG=${IMAGE_TAG}

  post_build:
    commands:
      - echo Logging in to public Amazon ECR ...
      - aws --version
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${PUBLIC_REGISTRY}

      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - make push-image -j IMAGE_PREFIX=${PUBLIC_IMAGE_PREFIX} IMAGE_REGISTRY=${PUBLIC_REGISTRY} IMAGE_TAG=${IMAGE_TAG}
