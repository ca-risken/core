syntax = "proto3";

package core.iam;
option go_package = "github.com/CyberAgent/mimosa-core/proto/iam";

import "google/protobuf/empty.proto";
import "iam/user.proto";
import "iam/ext_user.proto";
import "iam/role.proto";
import "iam/policy.proto";

service IAMService {
  // User
  rpc ListUser(ListUserRequest) returns (ListUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc PutUser(PutUserRequest) returns (PutUserResponse);

  // Role
  rpc ListRole(ListRoleRequest) returns (ListRoleResponse);
  rpc GetRole(GetRoleRequest) returns (GetRoleResponse);
  rpc PutRole(PutRoleRequest) returns (PutRoleResponse);
  rpc DeleteRole(DeleteRoleRequest) returns (google.protobuf.Empty);
  rpc AttachRole(AttachRoleRequest) returns (AttachRoleResponse);
  rpc DetachRole(DetachRoleRequest) returns (google.protobuf.Empty);

  // ExtUser（外部ユーザとそのユーザへのロールの紐付けを指定した状態にします）
  rpc PutExtUser(PutExtUserRequest) returns (PutExtUserResponse)

  // Policy
  rpc ListPolicy(ListPolicyRequest) returns (ListPolicyResponse);
  rpc GetPolicy(GetPolicyRequest) returns (GetPolicyResponse);
  rpc PutPolicy(PutPolicyRequest) returns (PutPolicyResponse);
  rpc DeletePolicy(DeletePolicyRequest) returns (google.protobuf.Empty);
  rpc AttachPolicy(AttachPolicyRequest) returns (AttachPolicyResponse);
  rpc DetachPolicy(DetachPolicyRequest) returns (google.protobuf.Empty);

  // 認可（ユーザがリクエストしたアクションや、リソースに対しての認可を行います）
  rpc IsAuthorized(IsAuthorizedRequest) returns (IsAuthorizedResponse);
  // 特定プロジェクトに依存しない管理者権限を持っているかどうかを返します
  rpc IsAdmin(IsAdminRequest) returns (IsAdminResponse);
}

// IsAuthorizedRequest
// ユーザからのリクエストに対して、アクションやリソースへの認可を行います
message IsAuthorizedRequest {
  uint32 user_id = 1;    // UserID,(e.g.)111
  uint32 project_id = 2; // ProjectID,(e.g.)1001
  string action_name =
      3; // Service&API_name(<service_name>/<API>format),(e.g.)`finding/GetFinding`
  string resource_name =
      4; // System_resource_name(<prefix>/<resouorce_name>format),(e.g.)`aws:accessAnalyzer/samplebucket`
}

message IsAuthorizedResponse { bool ok = 1; }

// IsAdminRequest
// 特定プロジェクトに依存しない管理者権限を持っているかどうかを返します
message IsAdminRequest { uint32 user_id = 1; }

message IsAdminResponse { bool ok = 1; }
