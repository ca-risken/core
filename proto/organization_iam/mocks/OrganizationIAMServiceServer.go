// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	emptypb "google.golang.org/protobuf/types/known/emptypb"

	organization_iam "github.com/ca-risken/core/proto/organization_iam"
)

// OrganizationIAMServiceServer is an autogenerated mock type for the OrganizationIAMServiceServer type
type OrganizationIAMServiceServer struct {
	mock.Mock
}

// AttachOrganizationPolicy provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) AttachOrganizationPolicy(_a0 context.Context, _a1 *organization_iam.AttachOrganizationPolicyRequest) (*organization_iam.AttachOrganizationPolicyResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for AttachOrganizationPolicy")
	}

	var r0 *organization_iam.AttachOrganizationPolicyResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.AttachOrganizationPolicyRequest) (*organization_iam.AttachOrganizationPolicyResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.AttachOrganizationPolicyRequest) *organization_iam.AttachOrganizationPolicyResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.AttachOrganizationPolicyResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.AttachOrganizationPolicyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AttachOrganizationRole provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) AttachOrganizationRole(_a0 context.Context, _a1 *organization_iam.AttachOrganizationRoleRequest) (*organization_iam.AttachOrganizationRoleResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for AttachOrganizationRole")
	}

	var r0 *organization_iam.AttachOrganizationRoleResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.AttachOrganizationRoleRequest) (*organization_iam.AttachOrganizationRoleResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.AttachOrganizationRoleRequest) *organization_iam.AttachOrganizationRoleResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.AttachOrganizationRoleResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.AttachOrganizationRoleRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteOrganizationPolicy provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) DeleteOrganizationPolicy(_a0 context.Context, _a1 *organization_iam.DeleteOrganizationPolicyRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrganizationPolicy")
	}

	var r0 *emptypb.Empty
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.DeleteOrganizationPolicyRequest) (*emptypb.Empty, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.DeleteOrganizationPolicyRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.DeleteOrganizationPolicyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteOrganizationRole provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) DeleteOrganizationRole(_a0 context.Context, _a1 *organization_iam.DeleteOrganizationRoleRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrganizationRole")
	}

	var r0 *emptypb.Empty
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.DeleteOrganizationRoleRequest) (*emptypb.Empty, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.DeleteOrganizationRoleRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.DeleteOrganizationRoleRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DetachOrganizationPolicy provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) DetachOrganizationPolicy(_a0 context.Context, _a1 *organization_iam.DetachOrganizationPolicyRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DetachOrganizationPolicy")
	}

	var r0 *emptypb.Empty
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.DetachOrganizationPolicyRequest) (*emptypb.Empty, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.DetachOrganizationPolicyRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.DetachOrganizationPolicyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DetachOrganizationRole provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) DetachOrganizationRole(_a0 context.Context, _a1 *organization_iam.DetachOrganizationRoleRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DetachOrganizationRole")
	}

	var r0 *emptypb.Empty
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.DetachOrganizationRoleRequest) (*emptypb.Empty, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.DetachOrganizationRoleRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.DetachOrganizationRoleRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrganizationPolicy provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) GetOrganizationPolicy(_a0 context.Context, _a1 *organization_iam.GetOrganizationPolicyRequest) (*organization_iam.GetOrganizationPolicyResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetOrganizationPolicy")
	}

	var r0 *organization_iam.GetOrganizationPolicyResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.GetOrganizationPolicyRequest) (*organization_iam.GetOrganizationPolicyResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.GetOrganizationPolicyRequest) *organization_iam.GetOrganizationPolicyResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.GetOrganizationPolicyResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.GetOrganizationPolicyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrganizationRole provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) GetOrganizationRole(_a0 context.Context, _a1 *organization_iam.GetOrganizationRoleRequest) (*organization_iam.GetOrganizationRoleResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetOrganizationRole")
	}

	var r0 *organization_iam.GetOrganizationRoleResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.GetOrganizationRoleRequest) (*organization_iam.GetOrganizationRoleResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.GetOrganizationRoleRequest) *organization_iam.GetOrganizationRoleResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.GetOrganizationRoleResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.GetOrganizationRoleRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsAuthorizedOrganization provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) IsAuthorizedOrganization(_a0 context.Context, _a1 *organization_iam.IsAuthorizedOrganizationRequest) (*organization_iam.IsAuthorizedOrganizationResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for IsAuthorizedOrganization")
	}

	var r0 *organization_iam.IsAuthorizedOrganizationResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.IsAuthorizedOrganizationRequest) (*organization_iam.IsAuthorizedOrganizationResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.IsAuthorizedOrganizationRequest) *organization_iam.IsAuthorizedOrganizationResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.IsAuthorizedOrganizationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.IsAuthorizedOrganizationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOrganizationPolicy provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) ListOrganizationPolicy(_a0 context.Context, _a1 *organization_iam.ListOrganizationPolicyRequest) (*organization_iam.ListOrganizationPolicyResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for ListOrganizationPolicy")
	}

	var r0 *organization_iam.ListOrganizationPolicyResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.ListOrganizationPolicyRequest) (*organization_iam.ListOrganizationPolicyResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.ListOrganizationPolicyRequest) *organization_iam.ListOrganizationPolicyResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.ListOrganizationPolicyResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.ListOrganizationPolicyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOrganizationRole provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) ListOrganizationRole(_a0 context.Context, _a1 *organization_iam.ListOrganizationRoleRequest) (*organization_iam.ListOrganizationRoleResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for ListOrganizationRole")
	}

	var r0 *organization_iam.ListOrganizationRoleResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.ListOrganizationRoleRequest) (*organization_iam.ListOrganizationRoleResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.ListOrganizationRoleRequest) *organization_iam.ListOrganizationRoleResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.ListOrganizationRoleResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.ListOrganizationRoleRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutOrganizationPolicy provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) PutOrganizationPolicy(_a0 context.Context, _a1 *organization_iam.PutOrganizationPolicyRequest) (*organization_iam.PutOrganizationPolicyResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for PutOrganizationPolicy")
	}

	var r0 *organization_iam.PutOrganizationPolicyResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.PutOrganizationPolicyRequest) (*organization_iam.PutOrganizationPolicyResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.PutOrganizationPolicyRequest) *organization_iam.PutOrganizationPolicyResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.PutOrganizationPolicyResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.PutOrganizationPolicyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutOrganizationRole provides a mock function with given fields: _a0, _a1
func (_m *OrganizationIAMServiceServer) PutOrganizationRole(_a0 context.Context, _a1 *organization_iam.PutOrganizationRoleRequest) (*organization_iam.PutOrganizationRoleResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for PutOrganizationRole")
	}

	var r0 *organization_iam.PutOrganizationRoleResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.PutOrganizationRoleRequest) (*organization_iam.PutOrganizationRoleResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization_iam.PutOrganizationRoleRequest) *organization_iam.PutOrganizationRoleResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization_iam.PutOrganizationRoleResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization_iam.PutOrganizationRoleRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOrganizationIAMServiceServer creates a new instance of OrganizationIAMServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrganizationIAMServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrganizationIAMServiceServer {
	mock := &OrganizationIAMServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
