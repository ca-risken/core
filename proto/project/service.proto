syntax = "proto3";

package core.project;
option go_package = "github.com/ca-risken/core/proto/project";

import "google/protobuf/empty.proto";
import "project/entity.proto";
import "validate/validate.proto";

service ProjectService {
  // project
  rpc ListProject(ListProjectRequest) returns (ListProjectResponse);
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse);
  rpc DeleteProject(DeleteProjectRequest) returns (google.protobuf.Empty);

  // project_tag
  rpc TagProject(TagProjectRequest) returns (TagProjectResponse);
  rpc UntagProject(UntagProjectRequest) returns (google.protobuf.Empty);

  rpc IsActive(IsActiveRequest) returns (IsActiveResponse);
  rpc CleanProject(google.protobuf.Empty) returns (google.protobuf.Empty);
}

message ListProjectRequest {
  uint32 user_id = 1;
  uint32 project_id = 2;
  string name = 3 [ (validate.rules).string.max_len = 64 ];
}

message ListProjectResponse { repeated Project project = 1; }

message CreateProjectRequest {
  uint32 user_id = 1 [ (validate.rules).uint32.gt = 0 ]; // project owner
  string name = 2 [ (validate.rules).string = {min_len : 1, max_len : 64} ];
}

message CreateProjectResponse { Project project = 1; }

message UpdateProjectRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  string name = 2 [ (validate.rules).string = {min_len : 1, max_len : 64} ];
}

message UpdateProjectResponse { Project project = 1; }

message DeleteProjectRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
}

message TagProjectRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  string tag = 2 [ (validate.rules).string = {min_len : 1, max_len : 512} ];
  string color = 3 [ (validate.rules).string = {min_len : 0, max_len : 32} ];
}

message TagProjectResponse { ProjectTag project_tag = 1; }

message UntagProjectRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  string tag = 2 [ (validate.rules).string = {min_len : 1, max_len : 512} ];
}

message IsActiveRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
}

message IsActiveResponse { bool active = 1; }
