// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	emptypb "google.golang.org/protobuf/types/known/emptypb"

	organization "github.com/ca-risken/core/proto/organization"
)

// OrganizationServiceServer is an autogenerated mock type for the OrganizationServiceServer type
type OrganizationServiceServer struct {
	mock.Mock
}

// CreateOrganization provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) CreateOrganization(_a0 context.Context, _a1 *organization.CreateOrganizationRequest) (*organization.CreateOrganizationResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrganization")
	}

	var r0 *organization.CreateOrganizationResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.CreateOrganizationRequest) (*organization.CreateOrganizationResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.CreateOrganizationRequest) *organization.CreateOrganizationResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization.CreateOrganizationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.CreateOrganizationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteOrganization provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) DeleteOrganization(_a0 context.Context, _a1 *organization.DeleteOrganizationRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrganization")
	}

	var r0 *emptypb.Empty
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.DeleteOrganizationRequest) (*emptypb.Empty, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.DeleteOrganizationRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.DeleteOrganizationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteOrganizationInvitation provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) DeleteOrganizationInvitation(_a0 context.Context, _a1 *organization.DeleteOrganizationInvitationRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrganizationInvitation")
	}

	var r0 *emptypb.Empty
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.DeleteOrganizationInvitationRequest) (*emptypb.Empty, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.DeleteOrganizationInvitationRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.DeleteOrganizationInvitationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOrganization provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) ListOrganization(_a0 context.Context, _a1 *organization.ListOrganizationRequest) (*organization.ListOrganizationResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for ListOrganization")
	}

	var r0 *organization.ListOrganizationResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.ListOrganizationRequest) (*organization.ListOrganizationResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.ListOrganizationRequest) *organization.ListOrganizationResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization.ListOrganizationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.ListOrganizationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOrganizationInvitation provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) ListOrganizationInvitation(_a0 context.Context, _a1 *organization.ListOrganizationInvitationRequest) (*organization.ListOrganizationInvitationResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for ListOrganizationInvitation")
	}

	var r0 *organization.ListOrganizationInvitationResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.ListOrganizationInvitationRequest) (*organization.ListOrganizationInvitationResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.ListOrganizationInvitationRequest) *organization.ListOrganizationInvitationResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization.ListOrganizationInvitationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.ListOrganizationInvitationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListProjectsInOrganization provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) ListProjectsInOrganization(_a0 context.Context, _a1 *organization.ListProjectsInOrganizationRequest) (*organization.ListProjectsInOrganizationResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for ListProjectsInOrganization")
	}

	var r0 *organization.ListProjectsInOrganizationResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.ListProjectsInOrganizationRequest) (*organization.ListProjectsInOrganizationResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.ListProjectsInOrganizationRequest) *organization.ListProjectsInOrganizationResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization.ListProjectsInOrganizationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.ListProjectsInOrganizationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutOrganizationInvitation provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) PutOrganizationInvitation(_a0 context.Context, _a1 *organization.PutOrganizationInvitationRequest) (*organization.PutOrganizationInvitationResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for PutOrganizationInvitation")
	}

	var r0 *organization.PutOrganizationInvitationResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.PutOrganizationInvitationRequest) (*organization.PutOrganizationInvitationResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.PutOrganizationInvitationRequest) *organization.PutOrganizationInvitationResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization.PutOrganizationInvitationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.PutOrganizationInvitationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutOrganizationProject provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) PutOrganizationProject(_a0 context.Context, _a1 *organization.PutOrganizationProjectRequest) (*organization.PutOrganizationProjectResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for PutOrganizationProject")
	}

	var r0 *organization.PutOrganizationProjectResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.PutOrganizationProjectRequest) (*organization.PutOrganizationProjectResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.PutOrganizationProjectRequest) *organization.PutOrganizationProjectResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization.PutOrganizationProjectResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.PutOrganizationProjectRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveProjectsInOrganization provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) RemoveProjectsInOrganization(_a0 context.Context, _a1 *organization.RemoveProjectsInOrganizationRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for RemoveProjectsInOrganization")
	}

	var r0 *emptypb.Empty
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.RemoveProjectsInOrganizationRequest) (*emptypb.Empty, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.RemoveProjectsInOrganizationRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.RemoveProjectsInOrganizationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReplyOrganizationInvitation provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) ReplyOrganizationInvitation(_a0 context.Context, _a1 *organization.ReplyOrganizationInvitationRequest) (*organization.ReplyOrganizationInvitationResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for ReplyOrganizationInvitation")
	}

	var r0 *organization.ReplyOrganizationInvitationResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.ReplyOrganizationInvitationRequest) (*organization.ReplyOrganizationInvitationResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.ReplyOrganizationInvitationRequest) *organization.ReplyOrganizationInvitationResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization.ReplyOrganizationInvitationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.ReplyOrganizationInvitationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateOrganization provides a mock function with given fields: _a0, _a1
func (_m *OrganizationServiceServer) UpdateOrganization(_a0 context.Context, _a1 *organization.UpdateOrganizationRequest) (*organization.UpdateOrganizationResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for UpdateOrganization")
	}

	var r0 *organization.UpdateOrganizationResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *organization.UpdateOrganizationRequest) (*organization.UpdateOrganizationResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *organization.UpdateOrganizationRequest) *organization.UpdateOrganizationResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*organization.UpdateOrganizationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *organization.UpdateOrganizationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOrganizationServiceServer creates a new instance of OrganizationServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrganizationServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrganizationServiceServer {
	mock := &OrganizationServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
