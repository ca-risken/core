// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: alert/service.proto

package alert

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   uint32   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Status      []Status `protobuf:"varint,2,rep,packed,name=status,proto3,enum=core.alert.Status" json:"status,omitempty"`
	Severity    []string `protobuf:"bytes,3,rep,name=severity,proto3" json:"severity,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	FromAt      int64    `protobuf:"varint,5,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt        int64    `protobuf:"varint,6,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListAlertRequest) Reset() {
	*x = ListAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertRequest) ProtoMessage() {}

func (x *ListAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertRequest.ProtoReflect.Descriptor instead.
func (*ListAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListAlertRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAlertRequest) GetStatus() []Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListAlertRequest) GetSeverity() []string {
	if x != nil {
		return x.Severity
	}
	return nil
}

func (x *ListAlertRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListAlertRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListAlertRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert []*Alert `protobuf:"bytes,1,rep,name=alert,proto3" json:"alert,omitempty"`
}

func (x *ListAlertResponse) Reset() {
	*x = ListAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertResponse) ProtoMessage() {}

func (x *ListAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertResponse.ProtoReflect.Descriptor instead.
func (*ListAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListAlertResponse) GetAlert() []*Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type GetAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertId   uint32 `protobuf:"varint,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
}

func (x *GetAlertRequest) Reset() {
	*x = GetAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRequest) ProtoMessage() {}

func (x *GetAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAlertRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAlertRequest) GetAlertId() uint32 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

type GetAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *GetAlertResponse) Reset() {
	*x = GetAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertResponse) ProtoMessage() {}

func (x *GetAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertResponse.ProtoReflect.Descriptor instead.
func (*GetAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetAlertResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type PutAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32          `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Alert     *AlertForUpsert `protobuf:"bytes,2,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *PutAlertRequest) Reset() {
	*x = PutAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertRequest) ProtoMessage() {}

func (x *PutAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertRequest.ProtoReflect.Descriptor instead.
func (*PutAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{4}
}

func (x *PutAlertRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutAlertRequest) GetAlert() *AlertForUpsert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type PutAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *PutAlertResponse) Reset() {
	*x = PutAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertResponse) ProtoMessage() {}

func (x *PutAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertResponse.ProtoReflect.Descriptor instead.
func (*PutAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{5}
}

func (x *PutAlertResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type DeleteAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertId   uint32 `protobuf:"varint,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
}

func (x *DeleteAlertRequest) Reset() {
	*x = DeleteAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertRequest) ProtoMessage() {}

func (x *DeleteAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAlertRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteAlertRequest) GetAlertId() uint32 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

type ListAlertHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   uint32   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertId     uint32   `protobuf:"varint,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	HistoryType []string `protobuf:"bytes,3,rep,name=history_type,json=historyType,proto3" json:"history_type,omitempty"`
	Severity    []string `protobuf:"bytes,4,rep,name=severity,proto3" json:"severity,omitempty"`
	FromAt      int64    `protobuf:"varint,5,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt        int64    `protobuf:"varint,6,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListAlertHistoryRequest) Reset() {
	*x = ListAlertHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertHistoryRequest) ProtoMessage() {}

func (x *ListAlertHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertHistoryRequest.ProtoReflect.Descriptor instead.
func (*ListAlertHistoryRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListAlertHistoryRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAlertHistoryRequest) GetAlertId() uint32 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

func (x *ListAlertHistoryRequest) GetHistoryType() []string {
	if x != nil {
		return x.HistoryType
	}
	return nil
}

func (x *ListAlertHistoryRequest) GetSeverity() []string {
	if x != nil {
		return x.Severity
	}
	return nil
}

func (x *ListAlertHistoryRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListAlertHistoryRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListAlertHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertHistory []*AlertHistory `protobuf:"bytes,1,rep,name=alert_history,json=alertHistory,proto3" json:"alert_history,omitempty"`
}

func (x *ListAlertHistoryResponse) Reset() {
	*x = ListAlertHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertHistoryResponse) ProtoMessage() {}

func (x *ListAlertHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertHistoryResponse.ProtoReflect.Descriptor instead.
func (*ListAlertHistoryResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListAlertHistoryResponse) GetAlertHistory() []*AlertHistory {
	if x != nil {
		return x.AlertHistory
	}
	return nil
}

type GetAlertHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertHistoryId uint32 `protobuf:"varint,2,opt,name=alert_history_id,json=alertHistoryId,proto3" json:"alert_history_id,omitempty"`
}

func (x *GetAlertHistoryRequest) Reset() {
	*x = GetAlertHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertHistoryRequest) ProtoMessage() {}

func (x *GetAlertHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetAlertHistoryRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetAlertHistoryRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAlertHistoryRequest) GetAlertHistoryId() uint32 {
	if x != nil {
		return x.AlertHistoryId
	}
	return 0
}

type GetAlertHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertHistory *AlertHistory `protobuf:"bytes,1,opt,name=alert_history,json=alertHistory,proto3" json:"alert_history,omitempty"`
}

func (x *GetAlertHistoryResponse) Reset() {
	*x = GetAlertHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertHistoryResponse) ProtoMessage() {}

func (x *GetAlertHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetAlertHistoryResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetAlertHistoryResponse) GetAlertHistory() *AlertHistory {
	if x != nil {
		return x.AlertHistory
	}
	return nil
}

type PutAlertHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    uint32                 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertHistory *AlertHistoryForUpsert `protobuf:"bytes,2,opt,name=alert_history,json=alertHistory,proto3" json:"alert_history,omitempty"`
}

func (x *PutAlertHistoryRequest) Reset() {
	*x = PutAlertHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertHistoryRequest) ProtoMessage() {}

func (x *PutAlertHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertHistoryRequest.ProtoReflect.Descriptor instead.
func (*PutAlertHistoryRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{11}
}

func (x *PutAlertHistoryRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutAlertHistoryRequest) GetAlertHistory() *AlertHistoryForUpsert {
	if x != nil {
		return x.AlertHistory
	}
	return nil
}

type PutAlertHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertHistory *AlertHistory `protobuf:"bytes,1,opt,name=alert_history,json=alertHistory,proto3" json:"alert_history,omitempty"`
}

func (x *PutAlertHistoryResponse) Reset() {
	*x = PutAlertHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertHistoryResponse) ProtoMessage() {}

func (x *PutAlertHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertHistoryResponse.ProtoReflect.Descriptor instead.
func (*PutAlertHistoryResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{12}
}

func (x *PutAlertHistoryResponse) GetAlertHistory() *AlertHistory {
	if x != nil {
		return x.AlertHistory
	}
	return nil
}

type DeleteAlertHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertHistoryId uint32 `protobuf:"varint,2,opt,name=alert_history_id,json=alertHistoryId,proto3" json:"alert_history_id,omitempty"`
}

func (x *DeleteAlertHistoryRequest) Reset() {
	*x = DeleteAlertHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertHistoryRequest) ProtoMessage() {}

func (x *DeleteAlertHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertHistoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertHistoryRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteAlertHistoryRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteAlertHistoryRequest) GetAlertHistoryId() uint32 {
	if x != nil {
		return x.AlertHistoryId
	}
	return 0
}

type ListRelAlertFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertId   uint32 `protobuf:"varint,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	FindingId uint32 `protobuf:"varint,3,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
	FromAt    int64  `protobuf:"varint,4,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt      int64  `protobuf:"varint,5,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListRelAlertFindingRequest) Reset() {
	*x = ListRelAlertFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelAlertFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelAlertFindingRequest) ProtoMessage() {}

func (x *ListRelAlertFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelAlertFindingRequest.ProtoReflect.Descriptor instead.
func (*ListRelAlertFindingRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListRelAlertFindingRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListRelAlertFindingRequest) GetAlertId() uint32 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

func (x *ListRelAlertFindingRequest) GetFindingId() uint32 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

func (x *ListRelAlertFindingRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListRelAlertFindingRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListRelAlertFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelAlertFinding []*RelAlertFinding `protobuf:"bytes,1,rep,name=rel_alert_finding,json=relAlertFinding,proto3" json:"rel_alert_finding,omitempty"`
}

func (x *ListRelAlertFindingResponse) Reset() {
	*x = ListRelAlertFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelAlertFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelAlertFindingResponse) ProtoMessage() {}

func (x *ListRelAlertFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelAlertFindingResponse.ProtoReflect.Descriptor instead.
func (*ListRelAlertFindingResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListRelAlertFindingResponse) GetRelAlertFinding() []*RelAlertFinding {
	if x != nil {
		return x.RelAlertFinding
	}
	return nil
}

type GetRelAlertFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertId   uint32 `protobuf:"varint,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	FindingId uint32 `protobuf:"varint,3,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
}

func (x *GetRelAlertFindingRequest) Reset() {
	*x = GetRelAlertFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelAlertFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelAlertFindingRequest) ProtoMessage() {}

func (x *GetRelAlertFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelAlertFindingRequest.ProtoReflect.Descriptor instead.
func (*GetRelAlertFindingRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetRelAlertFindingRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetRelAlertFindingRequest) GetAlertId() uint32 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

func (x *GetRelAlertFindingRequest) GetFindingId() uint32 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

type GetRelAlertFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelAlertFinding *RelAlertFinding `protobuf:"bytes,1,opt,name=rel_alert_finding,json=relAlertFinding,proto3" json:"rel_alert_finding,omitempty"`
}

func (x *GetRelAlertFindingResponse) Reset() {
	*x = GetRelAlertFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelAlertFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelAlertFindingResponse) ProtoMessage() {}

func (x *GetRelAlertFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelAlertFindingResponse.ProtoReflect.Descriptor instead.
func (*GetRelAlertFindingResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetRelAlertFindingResponse) GetRelAlertFinding() *RelAlertFinding {
	if x != nil {
		return x.RelAlertFinding
	}
	return nil
}

type PutRelAlertFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       uint32                    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelAlertFinding *RelAlertFindingForUpsert `protobuf:"bytes,2,opt,name=rel_alert_finding,json=relAlertFinding,proto3" json:"rel_alert_finding,omitempty"`
}

func (x *PutRelAlertFindingRequest) Reset() {
	*x = PutRelAlertFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRelAlertFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRelAlertFindingRequest) ProtoMessage() {}

func (x *PutRelAlertFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRelAlertFindingRequest.ProtoReflect.Descriptor instead.
func (*PutRelAlertFindingRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{18}
}

func (x *PutRelAlertFindingRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutRelAlertFindingRequest) GetRelAlertFinding() *RelAlertFindingForUpsert {
	if x != nil {
		return x.RelAlertFinding
	}
	return nil
}

type PutRelAlertFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelAlertFinding *RelAlertFinding `protobuf:"bytes,1,opt,name=rel_alert_finding,json=relAlertFinding,proto3" json:"rel_alert_finding,omitempty"`
}

func (x *PutRelAlertFindingResponse) Reset() {
	*x = PutRelAlertFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRelAlertFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRelAlertFindingResponse) ProtoMessage() {}

func (x *PutRelAlertFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRelAlertFindingResponse.ProtoReflect.Descriptor instead.
func (*PutRelAlertFindingResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{19}
}

func (x *PutRelAlertFindingResponse) GetRelAlertFinding() *RelAlertFinding {
	if x != nil {
		return x.RelAlertFinding
	}
	return nil
}

type DeleteRelAlertFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertId   uint32 `protobuf:"varint,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	FindingId uint32 `protobuf:"varint,3,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
}

func (x *DeleteRelAlertFindingRequest) Reset() {
	*x = DeleteRelAlertFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelAlertFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelAlertFindingRequest) ProtoMessage() {}

func (x *DeleteRelAlertFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelAlertFindingRequest.ProtoReflect.Descriptor instead.
func (*DeleteRelAlertFindingRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteRelAlertFindingRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteRelAlertFindingRequest) GetAlertId() uint32 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

func (x *DeleteRelAlertFindingRequest) GetFindingId() uint32 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

type ListAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Severity  []string `protobuf:"bytes,2,rep,name=severity,proto3" json:"severity,omitempty"`
	Enabled   bool     `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	FromAt    int64    `protobuf:"varint,4,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt      int64    `protobuf:"varint,5,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListAlertConditionRequest) Reset() {
	*x = ListAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionRequest) ProtoMessage() {}

func (x *ListAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*ListAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListAlertConditionRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAlertConditionRequest) GetSeverity() []string {
	if x != nil {
		return x.Severity
	}
	return nil
}

func (x *ListAlertConditionRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ListAlertConditionRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListAlertConditionRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListAlertConditionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondition []*AlertCondition `protobuf:"bytes,1,rep,name=alert_condition,json=alertCondition,proto3" json:"alert_condition,omitempty"`
}

func (x *ListAlertConditionResponse) Reset() {
	*x = ListAlertConditionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionResponse) ProtoMessage() {}

func (x *ListAlertConditionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionResponse.ProtoReflect.Descriptor instead.
func (*ListAlertConditionResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListAlertConditionResponse) GetAlertCondition() []*AlertCondition {
	if x != nil {
		return x.AlertCondition
	}
	return nil
}

type GetAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId uint32 `protobuf:"varint,2,opt,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
}

func (x *GetAlertConditionRequest) Reset() {
	*x = GetAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertConditionRequest) ProtoMessage() {}

func (x *GetAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*GetAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetAlertConditionRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAlertConditionRequest) GetAlertConditionId() uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return 0
}

type GetAlertConditionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondition *AlertCondition `protobuf:"bytes,1,opt,name=alert_condition,json=alertCondition,proto3" json:"alert_condition,omitempty"`
}

func (x *GetAlertConditionResponse) Reset() {
	*x = GetAlertConditionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertConditionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertConditionResponse) ProtoMessage() {}

func (x *GetAlertConditionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertConditionResponse.ProtoReflect.Descriptor instead.
func (*GetAlertConditionResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetAlertConditionResponse) GetAlertCondition() *AlertCondition {
	if x != nil {
		return x.AlertCondition
	}
	return nil
}

type PutAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint32                   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertCondition *AlertConditionForUpsert `protobuf:"bytes,2,opt,name=alert_condition,json=alertCondition,proto3" json:"alert_condition,omitempty"`
}

func (x *PutAlertConditionRequest) Reset() {
	*x = PutAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertConditionRequest) ProtoMessage() {}

func (x *PutAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*PutAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{25}
}

func (x *PutAlertConditionRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutAlertConditionRequest) GetAlertCondition() *AlertConditionForUpsert {
	if x != nil {
		return x.AlertCondition
	}
	return nil
}

type PutAlertConditionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondition *AlertCondition `protobuf:"bytes,1,opt,name=alert_condition,json=alertCondition,proto3" json:"alert_condition,omitempty"`
}

func (x *PutAlertConditionResponse) Reset() {
	*x = PutAlertConditionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertConditionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertConditionResponse) ProtoMessage() {}

func (x *PutAlertConditionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertConditionResponse.ProtoReflect.Descriptor instead.
func (*PutAlertConditionResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{26}
}

func (x *PutAlertConditionResponse) GetAlertCondition() *AlertCondition {
	if x != nil {
		return x.AlertCondition
	}
	return nil
}

type DeleteAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId uint32 `protobuf:"varint,2,opt,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
}

func (x *DeleteAlertConditionRequest) Reset() {
	*x = DeleteAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertConditionRequest) ProtoMessage() {}

func (x *DeleteAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteAlertConditionRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteAlertConditionRequest) GetAlertConditionId() uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return 0
}

type ListAlertRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	FromScore float32 `protobuf:"fixed32,2,opt,name=from_score,json=fromScore,proto3" json:"from_score,omitempty"`
	ToScore   float32 `protobuf:"fixed32,3,opt,name=to_score,json=toScore,proto3" json:"to_score,omitempty"`
	FromAt    int64   `protobuf:"varint,4,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt      int64   `protobuf:"varint,5,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListAlertRuleRequest) Reset() {
	*x = ListAlertRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertRuleRequest) ProtoMessage() {}

func (x *ListAlertRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertRuleRequest.ProtoReflect.Descriptor instead.
func (*ListAlertRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{28}
}

func (x *ListAlertRuleRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAlertRuleRequest) GetFromScore() float32 {
	if x != nil {
		return x.FromScore
	}
	return 0
}

func (x *ListAlertRuleRequest) GetToScore() float32 {
	if x != nil {
		return x.ToScore
	}
	return 0
}

func (x *ListAlertRuleRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListAlertRuleRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListAlertRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertRule []*AlertRule `protobuf:"bytes,1,rep,name=alert_rule,json=alertRule,proto3" json:"alert_rule,omitempty"`
}

func (x *ListAlertRuleResponse) Reset() {
	*x = ListAlertRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertRuleResponse) ProtoMessage() {}

func (x *ListAlertRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertRuleResponse.ProtoReflect.Descriptor instead.
func (*ListAlertRuleResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListAlertRuleResponse) GetAlertRule() []*AlertRule {
	if x != nil {
		return x.AlertRule
	}
	return nil
}

type GetAlertRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertRuleId uint32 `protobuf:"varint,2,opt,name=alert_rule_id,json=alertRuleId,proto3" json:"alert_rule_id,omitempty"`
}

func (x *GetAlertRuleRequest) Reset() {
	*x = GetAlertRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRuleRequest) ProtoMessage() {}

func (x *GetAlertRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRuleRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetAlertRuleRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAlertRuleRequest) GetAlertRuleId() uint32 {
	if x != nil {
		return x.AlertRuleId
	}
	return 0
}

type GetAlertRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertRule *AlertRule `protobuf:"bytes,1,opt,name=alert_rule,json=alertRule,proto3" json:"alert_rule,omitempty"`
}

func (x *GetAlertRuleResponse) Reset() {
	*x = GetAlertRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRuleResponse) ProtoMessage() {}

func (x *GetAlertRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRuleResponse.ProtoReflect.Descriptor instead.
func (*GetAlertRuleResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetAlertRuleResponse) GetAlertRule() *AlertRule {
	if x != nil {
		return x.AlertRule
	}
	return nil
}

type PutAlertRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32              `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertRule *AlertRuleForUpsert `protobuf:"bytes,2,opt,name=alert_rule,json=alertRule,proto3" json:"alert_rule,omitempty"`
}

func (x *PutAlertRuleRequest) Reset() {
	*x = PutAlertRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertRuleRequest) ProtoMessage() {}

func (x *PutAlertRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertRuleRequest.ProtoReflect.Descriptor instead.
func (*PutAlertRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{32}
}

func (x *PutAlertRuleRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutAlertRuleRequest) GetAlertRule() *AlertRuleForUpsert {
	if x != nil {
		return x.AlertRule
	}
	return nil
}

type PutAlertRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertRule *AlertRule `protobuf:"bytes,1,opt,name=alert_rule,json=alertRule,proto3" json:"alert_rule,omitempty"`
}

func (x *PutAlertRuleResponse) Reset() {
	*x = PutAlertRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertRuleResponse) ProtoMessage() {}

func (x *PutAlertRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertRuleResponse.ProtoReflect.Descriptor instead.
func (*PutAlertRuleResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{33}
}

func (x *PutAlertRuleResponse) GetAlertRule() *AlertRule {
	if x != nil {
		return x.AlertRule
	}
	return nil
}

type DeleteAlertRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertRuleId uint32 `protobuf:"varint,2,opt,name=alert_rule_id,json=alertRuleId,proto3" json:"alert_rule_id,omitempty"`
}

func (x *DeleteAlertRuleRequest) Reset() {
	*x = DeleteAlertRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertRuleRequest) ProtoMessage() {}

func (x *DeleteAlertRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteAlertRuleRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteAlertRuleRequest) GetAlertRuleId() uint32 {
	if x != nil {
		return x.AlertRuleId
	}
	return 0
}

type ListAlertCondRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId uint32 `protobuf:"varint,2,opt,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
	AlertRuleId      uint32 `protobuf:"varint,3,opt,name=alert_rule_id,json=alertRuleId,proto3" json:"alert_rule_id,omitempty"`
	FromAt           int64  `protobuf:"varint,4,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt             int64  `protobuf:"varint,5,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListAlertCondRuleRequest) Reset() {
	*x = ListAlertCondRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertCondRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertCondRuleRequest) ProtoMessage() {}

func (x *ListAlertCondRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertCondRuleRequest.ProtoReflect.Descriptor instead.
func (*ListAlertCondRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{35}
}

func (x *ListAlertCondRuleRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAlertCondRuleRequest) GetAlertConditionId() uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return 0
}

func (x *ListAlertCondRuleRequest) GetAlertRuleId() uint32 {
	if x != nil {
		return x.AlertRuleId
	}
	return 0
}

func (x *ListAlertCondRuleRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListAlertCondRuleRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListAlertCondRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondRule []*AlertCondRule `protobuf:"bytes,1,rep,name=alert_cond_rule,json=alertCondRule,proto3" json:"alert_cond_rule,omitempty"`
}

func (x *ListAlertCondRuleResponse) Reset() {
	*x = ListAlertCondRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertCondRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertCondRuleResponse) ProtoMessage() {}

func (x *ListAlertCondRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertCondRuleResponse.ProtoReflect.Descriptor instead.
func (*ListAlertCondRuleResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{36}
}

func (x *ListAlertCondRuleResponse) GetAlertCondRule() []*AlertCondRule {
	if x != nil {
		return x.AlertCondRule
	}
	return nil
}

type GetAlertCondRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId uint32 `protobuf:"varint,2,opt,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
	AlertRuleId      uint32 `protobuf:"varint,3,opt,name=alert_rule_id,json=alertRuleId,proto3" json:"alert_rule_id,omitempty"`
}

func (x *GetAlertCondRuleRequest) Reset() {
	*x = GetAlertCondRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertCondRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertCondRuleRequest) ProtoMessage() {}

func (x *GetAlertCondRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertCondRuleRequest.ProtoReflect.Descriptor instead.
func (*GetAlertCondRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetAlertCondRuleRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAlertCondRuleRequest) GetAlertConditionId() uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return 0
}

func (x *GetAlertCondRuleRequest) GetAlertRuleId() uint32 {
	if x != nil {
		return x.AlertRuleId
	}
	return 0
}

type GetAlertCondRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondRule *AlertCondRule `protobuf:"bytes,1,opt,name=alert_cond_rule,json=alertCondRule,proto3" json:"alert_cond_rule,omitempty"`
}

func (x *GetAlertCondRuleResponse) Reset() {
	*x = GetAlertCondRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertCondRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertCondRuleResponse) ProtoMessage() {}

func (x *GetAlertCondRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertCondRuleResponse.ProtoReflect.Descriptor instead.
func (*GetAlertCondRuleResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetAlertCondRuleResponse) GetAlertCondRule() *AlertCondRule {
	if x != nil {
		return x.AlertCondRule
	}
	return nil
}

type PutAlertCondRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     uint32                  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertCondRule *AlertCondRuleForUpsert `protobuf:"bytes,2,opt,name=alert_cond_rule,json=alertCondRule,proto3" json:"alert_cond_rule,omitempty"`
}

func (x *PutAlertCondRuleRequest) Reset() {
	*x = PutAlertCondRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertCondRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertCondRuleRequest) ProtoMessage() {}

func (x *PutAlertCondRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertCondRuleRequest.ProtoReflect.Descriptor instead.
func (*PutAlertCondRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{39}
}

func (x *PutAlertCondRuleRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutAlertCondRuleRequest) GetAlertCondRule() *AlertCondRuleForUpsert {
	if x != nil {
		return x.AlertCondRule
	}
	return nil
}

type PutAlertCondRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondRule *AlertCondRule `protobuf:"bytes,1,opt,name=alert_cond_rule,json=alertCondRule,proto3" json:"alert_cond_rule,omitempty"`
}

func (x *PutAlertCondRuleResponse) Reset() {
	*x = PutAlertCondRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertCondRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertCondRuleResponse) ProtoMessage() {}

func (x *PutAlertCondRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertCondRuleResponse.ProtoReflect.Descriptor instead.
func (*PutAlertCondRuleResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{40}
}

func (x *PutAlertCondRuleResponse) GetAlertCondRule() *AlertCondRule {
	if x != nil {
		return x.AlertCondRule
	}
	return nil
}

type DeleteAlertCondRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId uint32 `protobuf:"varint,2,opt,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
	AlertRuleId      uint32 `protobuf:"varint,3,opt,name=alert_rule_id,json=alertRuleId,proto3" json:"alert_rule_id,omitempty"`
}

func (x *DeleteAlertCondRuleRequest) Reset() {
	*x = DeleteAlertCondRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertCondRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertCondRuleRequest) ProtoMessage() {}

func (x *DeleteAlertCondRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertCondRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertCondRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteAlertCondRuleRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteAlertCondRuleRequest) GetAlertConditionId() uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return 0
}

func (x *DeleteAlertCondRuleRequest) GetAlertRuleId() uint32 {
	if x != nil {
		return x.AlertRuleId
	}
	return 0
}

type ListNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	FromAt    int64  `protobuf:"varint,3,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt      int64  `protobuf:"varint,4,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListNotificationRequest) Reset() {
	*x = ListNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationRequest) ProtoMessage() {}

func (x *ListNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{42}
}

func (x *ListNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListNotificationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListNotificationRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListNotificationRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification []*Notification `protobuf:"bytes,1,rep,name=notification,proto3" json:"notification,omitempty"`
}

func (x *ListNotificationResponse) Reset() {
	*x = ListNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationResponse) ProtoMessage() {}

func (x *ListNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{43}
}

func (x *ListNotificationResponse) GetNotification() []*Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type GetNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	NotificationId uint32 `protobuf:"varint,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{44}
}

func (x *GetNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetNotificationRequest) GetNotificationId() uint32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type GetNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *GetNotificationResponse) Reset() {
	*x = GetNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationResponse) ProtoMessage() {}

func (x *GetNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{45}
}

func (x *GetNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type PutNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    uint32                 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Notification *NotificationForUpsert `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *PutNotificationRequest) Reset() {
	*x = PutNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutNotificationRequest) ProtoMessage() {}

func (x *PutNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutNotificationRequest.ProtoReflect.Descriptor instead.
func (*PutNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{46}
}

func (x *PutNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutNotificationRequest) GetNotification() *NotificationForUpsert {
	if x != nil {
		return x.Notification
	}
	return nil
}

type PutNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *PutNotificationResponse) Reset() {
	*x = PutNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutNotificationResponse) ProtoMessage() {}

func (x *PutNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutNotificationResponse.ProtoReflect.Descriptor instead.
func (*PutNotificationResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{47}
}

func (x *PutNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type DeleteNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	NotificationId uint32 `protobuf:"varint,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteNotificationRequest) GetNotificationId() uint32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type TestNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	NotificationId uint32 `protobuf:"varint,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *TestNotificationRequest) Reset() {
	*x = TestNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestNotificationRequest) ProtoMessage() {}

func (x *TestNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestNotificationRequest.ProtoReflect.Descriptor instead.
func (*TestNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{49}
}

func (x *TestNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *TestNotificationRequest) GetNotificationId() uint32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type ListAlertCondNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId uint32 `protobuf:"varint,2,opt,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
	NotificationId   uint32 `protobuf:"varint,3,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	FromAt           int64  `protobuf:"varint,4,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt             int64  `protobuf:"varint,5,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListAlertCondNotificationRequest) Reset() {
	*x = ListAlertCondNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertCondNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertCondNotificationRequest) ProtoMessage() {}

func (x *ListAlertCondNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertCondNotificationRequest.ProtoReflect.Descriptor instead.
func (*ListAlertCondNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{50}
}

func (x *ListAlertCondNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAlertCondNotificationRequest) GetAlertConditionId() uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return 0
}

func (x *ListAlertCondNotificationRequest) GetNotificationId() uint32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *ListAlertCondNotificationRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListAlertCondNotificationRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListAlertCondNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondNotification []*AlertCondNotification `protobuf:"bytes,1,rep,name=alert_cond_notification,json=alertCondNotification,proto3" json:"alert_cond_notification,omitempty"`
}

func (x *ListAlertCondNotificationResponse) Reset() {
	*x = ListAlertCondNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertCondNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertCondNotificationResponse) ProtoMessage() {}

func (x *ListAlertCondNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertCondNotificationResponse.ProtoReflect.Descriptor instead.
func (*ListAlertCondNotificationResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{51}
}

func (x *ListAlertCondNotificationResponse) GetAlertCondNotification() []*AlertCondNotification {
	if x != nil {
		return x.AlertCondNotification
	}
	return nil
}

type GetAlertCondNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId uint32 `protobuf:"varint,2,opt,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
	NotificationId   uint32 `protobuf:"varint,3,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *GetAlertCondNotificationRequest) Reset() {
	*x = GetAlertCondNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertCondNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertCondNotificationRequest) ProtoMessage() {}

func (x *GetAlertCondNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertCondNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetAlertCondNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetAlertCondNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAlertCondNotificationRequest) GetAlertConditionId() uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return 0
}

func (x *GetAlertCondNotificationRequest) GetNotificationId() uint32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type GetAlertCondNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondNotification *AlertCondNotification `protobuf:"bytes,1,opt,name=alert_cond_notification,json=alertCondNotification,proto3" json:"alert_cond_notification,omitempty"`
}

func (x *GetAlertCondNotificationResponse) Reset() {
	*x = GetAlertCondNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertCondNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertCondNotificationResponse) ProtoMessage() {}

func (x *GetAlertCondNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertCondNotificationResponse.ProtoReflect.Descriptor instead.
func (*GetAlertCondNotificationResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetAlertCondNotificationResponse) GetAlertCondNotification() *AlertCondNotification {
	if x != nil {
		return x.AlertCondNotification
	}
	return nil
}

type PutAlertCondNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId             uint32                          `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertCondNotification *AlertCondNotificationForUpsert `protobuf:"bytes,2,opt,name=alert_cond_notification,json=alertCondNotification,proto3" json:"alert_cond_notification,omitempty"`
}

func (x *PutAlertCondNotificationRequest) Reset() {
	*x = PutAlertCondNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertCondNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertCondNotificationRequest) ProtoMessage() {}

func (x *PutAlertCondNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertCondNotificationRequest.ProtoReflect.Descriptor instead.
func (*PutAlertCondNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{54}
}

func (x *PutAlertCondNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutAlertCondNotificationRequest) GetAlertCondNotification() *AlertCondNotificationForUpsert {
	if x != nil {
		return x.AlertCondNotification
	}
	return nil
}

type PutAlertCondNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondNotification *AlertCondNotification `protobuf:"bytes,1,opt,name=alert_cond_notification,json=alertCondNotification,proto3" json:"alert_cond_notification,omitempty"`
}

func (x *PutAlertCondNotificationResponse) Reset() {
	*x = PutAlertCondNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAlertCondNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAlertCondNotificationResponse) ProtoMessage() {}

func (x *PutAlertCondNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAlertCondNotificationResponse.ProtoReflect.Descriptor instead.
func (*PutAlertCondNotificationResponse) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{55}
}

func (x *PutAlertCondNotificationResponse) GetAlertCondNotification() *AlertCondNotification {
	if x != nil {
		return x.AlertCondNotification
	}
	return nil
}

type DeleteAlertCondNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId uint32 `protobuf:"varint,2,opt,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
	NotificationId   uint32 `protobuf:"varint,3,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *DeleteAlertCondNotificationRequest) Reset() {
	*x = DeleteAlertCondNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertCondNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertCondNotificationRequest) ProtoMessage() {}

func (x *DeleteAlertCondNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertCondNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertCondNotificationRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteAlertCondNotificationRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteAlertCondNotificationRequest) GetAlertConditionId() uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return 0
}

func (x *DeleteAlertCondNotificationRequest) GetNotificationId() uint32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type AnalyzeAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AlertConditionId []uint32 `protobuf:"varint,2,rep,packed,name=alert_condition_id,json=alertConditionId,proto3" json:"alert_condition_id,omitempty"`
}

func (x *AnalyzeAlertRequest) Reset() {
	*x = AnalyzeAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeAlertRequest) ProtoMessage() {}

func (x *AnalyzeAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeAlertRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_service_proto_rawDescGZIP(), []int{57}
}

func (x *AnalyzeAlertRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AnalyzeAlertRequest) GetAlertConditionId() []uint32 {
	if x != nil {
		return x.AlertConditionId
	}
	return nil
}

var File_alert_service_proto protoreflect.FileDescriptor

var file_alert_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x3c,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x4b, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x62, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x3b, 0x0a, 0x10, 0x50, 0x75,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x4e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x59, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x61, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x7f, 0x0a, 0x16, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0d, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x22, 0x58, 0x0a, 0x17, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x64, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72,
	0x6f, 0x6d, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x66, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x5f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x0f, 0x72, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x22, 0x74, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x5f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x52, 0x65,
	0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x72,
	0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x8c,
	0x01, 0x0a, 0x19, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x11, 0x72,
	0x65, 0x6c, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x0f, 0x72, 0x65,
	0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x65, 0x0a,
	0x1a, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x72,
	0x65, 0x6c, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0x77, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x9e, 0x01,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x61,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x67, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a,
	0x18, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x19, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x74,
	0x6f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x6f, 0x41, 0x74, 0x22, 0x4d, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x22, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x73, 0x0a, 0x13, 0x50,
	0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x22, 0x4c, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x5b,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52,
	0x75, 0x6c, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4a,
	0x0a, 0x0f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x0d, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x5d, 0x0a, 0x18, 0x50, 0x75,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74,
	0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x58, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x60, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x16, 0x50, 0x75,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x17, 0x50, 0x75,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x17, 0x54, 0x65, 0x73, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x20,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x6f, 0x41, 0x74, 0x22, 0x7e, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x17, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7d,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x17, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01,
	0x0a, 0x1f, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x62, 0x0a, 0x17, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x15, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x20, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x17, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x62, 0x0a, 0x13, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x32, 0xbf, 0x18, 0x0a, 0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x66, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x25,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a,
	0x12, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x63, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x54, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x22,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x60, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x24, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x50,
	0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x5d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f,
	0x50, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x50, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a,
	0x10, 0x54, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x78,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x75, 0x0a, 0x18, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a,
	0x0c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x79, 0x62, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2f,
	0x6d, 0x69, 0x6d, 0x6f, 0x73, 0x61, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_alert_service_proto_rawDescOnce sync.Once
	file_alert_service_proto_rawDescData = file_alert_service_proto_rawDesc
)

func file_alert_service_proto_rawDescGZIP() []byte {
	file_alert_service_proto_rawDescOnce.Do(func() {
		file_alert_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_alert_service_proto_rawDescData)
	})
	return file_alert_service_proto_rawDescData
}

var file_alert_service_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_alert_service_proto_goTypes = []interface{}{
	(*ListAlertRequest)(nil),                   // 0: core.alert.ListAlertRequest
	(*ListAlertResponse)(nil),                  // 1: core.alert.ListAlertResponse
	(*GetAlertRequest)(nil),                    // 2: core.alert.GetAlertRequest
	(*GetAlertResponse)(nil),                   // 3: core.alert.GetAlertResponse
	(*PutAlertRequest)(nil),                    // 4: core.alert.PutAlertRequest
	(*PutAlertResponse)(nil),                   // 5: core.alert.PutAlertResponse
	(*DeleteAlertRequest)(nil),                 // 6: core.alert.DeleteAlertRequest
	(*ListAlertHistoryRequest)(nil),            // 7: core.alert.ListAlertHistoryRequest
	(*ListAlertHistoryResponse)(nil),           // 8: core.alert.ListAlertHistoryResponse
	(*GetAlertHistoryRequest)(nil),             // 9: core.alert.GetAlertHistoryRequest
	(*GetAlertHistoryResponse)(nil),            // 10: core.alert.GetAlertHistoryResponse
	(*PutAlertHistoryRequest)(nil),             // 11: core.alert.PutAlertHistoryRequest
	(*PutAlertHistoryResponse)(nil),            // 12: core.alert.PutAlertHistoryResponse
	(*DeleteAlertHistoryRequest)(nil),          // 13: core.alert.DeleteAlertHistoryRequest
	(*ListRelAlertFindingRequest)(nil),         // 14: core.alert.ListRelAlertFindingRequest
	(*ListRelAlertFindingResponse)(nil),        // 15: core.alert.ListRelAlertFindingResponse
	(*GetRelAlertFindingRequest)(nil),          // 16: core.alert.GetRelAlertFindingRequest
	(*GetRelAlertFindingResponse)(nil),         // 17: core.alert.GetRelAlertFindingResponse
	(*PutRelAlertFindingRequest)(nil),          // 18: core.alert.PutRelAlertFindingRequest
	(*PutRelAlertFindingResponse)(nil),         // 19: core.alert.PutRelAlertFindingResponse
	(*DeleteRelAlertFindingRequest)(nil),       // 20: core.alert.DeleteRelAlertFindingRequest
	(*ListAlertConditionRequest)(nil),          // 21: core.alert.ListAlertConditionRequest
	(*ListAlertConditionResponse)(nil),         // 22: core.alert.ListAlertConditionResponse
	(*GetAlertConditionRequest)(nil),           // 23: core.alert.GetAlertConditionRequest
	(*GetAlertConditionResponse)(nil),          // 24: core.alert.GetAlertConditionResponse
	(*PutAlertConditionRequest)(nil),           // 25: core.alert.PutAlertConditionRequest
	(*PutAlertConditionResponse)(nil),          // 26: core.alert.PutAlertConditionResponse
	(*DeleteAlertConditionRequest)(nil),        // 27: core.alert.DeleteAlertConditionRequest
	(*ListAlertRuleRequest)(nil),               // 28: core.alert.ListAlertRuleRequest
	(*ListAlertRuleResponse)(nil),              // 29: core.alert.ListAlertRuleResponse
	(*GetAlertRuleRequest)(nil),                // 30: core.alert.GetAlertRuleRequest
	(*GetAlertRuleResponse)(nil),               // 31: core.alert.GetAlertRuleResponse
	(*PutAlertRuleRequest)(nil),                // 32: core.alert.PutAlertRuleRequest
	(*PutAlertRuleResponse)(nil),               // 33: core.alert.PutAlertRuleResponse
	(*DeleteAlertRuleRequest)(nil),             // 34: core.alert.DeleteAlertRuleRequest
	(*ListAlertCondRuleRequest)(nil),           // 35: core.alert.ListAlertCondRuleRequest
	(*ListAlertCondRuleResponse)(nil),          // 36: core.alert.ListAlertCondRuleResponse
	(*GetAlertCondRuleRequest)(nil),            // 37: core.alert.GetAlertCondRuleRequest
	(*GetAlertCondRuleResponse)(nil),           // 38: core.alert.GetAlertCondRuleResponse
	(*PutAlertCondRuleRequest)(nil),            // 39: core.alert.PutAlertCondRuleRequest
	(*PutAlertCondRuleResponse)(nil),           // 40: core.alert.PutAlertCondRuleResponse
	(*DeleteAlertCondRuleRequest)(nil),         // 41: core.alert.DeleteAlertCondRuleRequest
	(*ListNotificationRequest)(nil),            // 42: core.alert.ListNotificationRequest
	(*ListNotificationResponse)(nil),           // 43: core.alert.ListNotificationResponse
	(*GetNotificationRequest)(nil),             // 44: core.alert.GetNotificationRequest
	(*GetNotificationResponse)(nil),            // 45: core.alert.GetNotificationResponse
	(*PutNotificationRequest)(nil),             // 46: core.alert.PutNotificationRequest
	(*PutNotificationResponse)(nil),            // 47: core.alert.PutNotificationResponse
	(*DeleteNotificationRequest)(nil),          // 48: core.alert.DeleteNotificationRequest
	(*TestNotificationRequest)(nil),            // 49: core.alert.TestNotificationRequest
	(*ListAlertCondNotificationRequest)(nil),   // 50: core.alert.ListAlertCondNotificationRequest
	(*ListAlertCondNotificationResponse)(nil),  // 51: core.alert.ListAlertCondNotificationResponse
	(*GetAlertCondNotificationRequest)(nil),    // 52: core.alert.GetAlertCondNotificationRequest
	(*GetAlertCondNotificationResponse)(nil),   // 53: core.alert.GetAlertCondNotificationResponse
	(*PutAlertCondNotificationRequest)(nil),    // 54: core.alert.PutAlertCondNotificationRequest
	(*PutAlertCondNotificationResponse)(nil),   // 55: core.alert.PutAlertCondNotificationResponse
	(*DeleteAlertCondNotificationRequest)(nil), // 56: core.alert.DeleteAlertCondNotificationRequest
	(*AnalyzeAlertRequest)(nil),                // 57: core.alert.AnalyzeAlertRequest
	(Status)(0),                                // 58: core.alert.Status
	(*Alert)(nil),                              // 59: core.alert.Alert
	(*AlertForUpsert)(nil),                     // 60: core.alert.AlertForUpsert
	(*AlertHistory)(nil),                       // 61: core.alert.AlertHistory
	(*AlertHistoryForUpsert)(nil),              // 62: core.alert.AlertHistoryForUpsert
	(*RelAlertFinding)(nil),                    // 63: core.alert.RelAlertFinding
	(*RelAlertFindingForUpsert)(nil),           // 64: core.alert.RelAlertFindingForUpsert
	(*AlertCondition)(nil),                     // 65: core.alert.AlertCondition
	(*AlertConditionForUpsert)(nil),            // 66: core.alert.AlertConditionForUpsert
	(*AlertRule)(nil),                          // 67: core.alert.AlertRule
	(*AlertRuleForUpsert)(nil),                 // 68: core.alert.AlertRuleForUpsert
	(*AlertCondRule)(nil),                      // 69: core.alert.AlertCondRule
	(*AlertCondRuleForUpsert)(nil),             // 70: core.alert.AlertCondRuleForUpsert
	(*Notification)(nil),                       // 71: core.alert.Notification
	(*NotificationForUpsert)(nil),              // 72: core.alert.NotificationForUpsert
	(*AlertCondNotification)(nil),              // 73: core.alert.AlertCondNotification
	(*AlertCondNotificationForUpsert)(nil),     // 74: core.alert.AlertCondNotificationForUpsert
	(*emptypb.Empty)(nil),                      // 75: google.protobuf.Empty
}
var file_alert_service_proto_depIdxs = []int32{
	58, // 0: core.alert.ListAlertRequest.status:type_name -> core.alert.Status
	59, // 1: core.alert.ListAlertResponse.alert:type_name -> core.alert.Alert
	59, // 2: core.alert.GetAlertResponse.alert:type_name -> core.alert.Alert
	60, // 3: core.alert.PutAlertRequest.alert:type_name -> core.alert.AlertForUpsert
	59, // 4: core.alert.PutAlertResponse.alert:type_name -> core.alert.Alert
	61, // 5: core.alert.ListAlertHistoryResponse.alert_history:type_name -> core.alert.AlertHistory
	61, // 6: core.alert.GetAlertHistoryResponse.alert_history:type_name -> core.alert.AlertHistory
	62, // 7: core.alert.PutAlertHistoryRequest.alert_history:type_name -> core.alert.AlertHistoryForUpsert
	61, // 8: core.alert.PutAlertHistoryResponse.alert_history:type_name -> core.alert.AlertHistory
	63, // 9: core.alert.ListRelAlertFindingResponse.rel_alert_finding:type_name -> core.alert.RelAlertFinding
	63, // 10: core.alert.GetRelAlertFindingResponse.rel_alert_finding:type_name -> core.alert.RelAlertFinding
	64, // 11: core.alert.PutRelAlertFindingRequest.rel_alert_finding:type_name -> core.alert.RelAlertFindingForUpsert
	63, // 12: core.alert.PutRelAlertFindingResponse.rel_alert_finding:type_name -> core.alert.RelAlertFinding
	65, // 13: core.alert.ListAlertConditionResponse.alert_condition:type_name -> core.alert.AlertCondition
	65, // 14: core.alert.GetAlertConditionResponse.alert_condition:type_name -> core.alert.AlertCondition
	66, // 15: core.alert.PutAlertConditionRequest.alert_condition:type_name -> core.alert.AlertConditionForUpsert
	65, // 16: core.alert.PutAlertConditionResponse.alert_condition:type_name -> core.alert.AlertCondition
	67, // 17: core.alert.ListAlertRuleResponse.alert_rule:type_name -> core.alert.AlertRule
	67, // 18: core.alert.GetAlertRuleResponse.alert_rule:type_name -> core.alert.AlertRule
	68, // 19: core.alert.PutAlertRuleRequest.alert_rule:type_name -> core.alert.AlertRuleForUpsert
	67, // 20: core.alert.PutAlertRuleResponse.alert_rule:type_name -> core.alert.AlertRule
	69, // 21: core.alert.ListAlertCondRuleResponse.alert_cond_rule:type_name -> core.alert.AlertCondRule
	69, // 22: core.alert.GetAlertCondRuleResponse.alert_cond_rule:type_name -> core.alert.AlertCondRule
	70, // 23: core.alert.PutAlertCondRuleRequest.alert_cond_rule:type_name -> core.alert.AlertCondRuleForUpsert
	69, // 24: core.alert.PutAlertCondRuleResponse.alert_cond_rule:type_name -> core.alert.AlertCondRule
	71, // 25: core.alert.ListNotificationResponse.notification:type_name -> core.alert.Notification
	71, // 26: core.alert.GetNotificationResponse.notification:type_name -> core.alert.Notification
	72, // 27: core.alert.PutNotificationRequest.notification:type_name -> core.alert.NotificationForUpsert
	71, // 28: core.alert.PutNotificationResponse.notification:type_name -> core.alert.Notification
	73, // 29: core.alert.ListAlertCondNotificationResponse.alert_cond_notification:type_name -> core.alert.AlertCondNotification
	73, // 30: core.alert.GetAlertCondNotificationResponse.alert_cond_notification:type_name -> core.alert.AlertCondNotification
	74, // 31: core.alert.PutAlertCondNotificationRequest.alert_cond_notification:type_name -> core.alert.AlertCondNotificationForUpsert
	73, // 32: core.alert.PutAlertCondNotificationResponse.alert_cond_notification:type_name -> core.alert.AlertCondNotification
	0,  // 33: core.alert.AlertService.ListAlert:input_type -> core.alert.ListAlertRequest
	2,  // 34: core.alert.AlertService.GetAlert:input_type -> core.alert.GetAlertRequest
	4,  // 35: core.alert.AlertService.PutAlert:input_type -> core.alert.PutAlertRequest
	6,  // 36: core.alert.AlertService.DeleteAlert:input_type -> core.alert.DeleteAlertRequest
	7,  // 37: core.alert.AlertService.ListAlertHistory:input_type -> core.alert.ListAlertHistoryRequest
	9,  // 38: core.alert.AlertService.GetAlertHistory:input_type -> core.alert.GetAlertHistoryRequest
	11, // 39: core.alert.AlertService.PutAlertHistory:input_type -> core.alert.PutAlertHistoryRequest
	13, // 40: core.alert.AlertService.DeleteAlertHistory:input_type -> core.alert.DeleteAlertHistoryRequest
	14, // 41: core.alert.AlertService.ListRelAlertFinding:input_type -> core.alert.ListRelAlertFindingRequest
	16, // 42: core.alert.AlertService.GetRelAlertFinding:input_type -> core.alert.GetRelAlertFindingRequest
	18, // 43: core.alert.AlertService.PutRelAlertFinding:input_type -> core.alert.PutRelAlertFindingRequest
	20, // 44: core.alert.AlertService.DeleteRelAlertFinding:input_type -> core.alert.DeleteRelAlertFindingRequest
	21, // 45: core.alert.AlertService.ListAlertCondition:input_type -> core.alert.ListAlertConditionRequest
	23, // 46: core.alert.AlertService.GetAlertCondition:input_type -> core.alert.GetAlertConditionRequest
	25, // 47: core.alert.AlertService.PutAlertCondition:input_type -> core.alert.PutAlertConditionRequest
	27, // 48: core.alert.AlertService.DeleteAlertCondition:input_type -> core.alert.DeleteAlertConditionRequest
	28, // 49: core.alert.AlertService.ListAlertRule:input_type -> core.alert.ListAlertRuleRequest
	30, // 50: core.alert.AlertService.GetAlertRule:input_type -> core.alert.GetAlertRuleRequest
	32, // 51: core.alert.AlertService.PutAlertRule:input_type -> core.alert.PutAlertRuleRequest
	34, // 52: core.alert.AlertService.DeleteAlertRule:input_type -> core.alert.DeleteAlertRuleRequest
	35, // 53: core.alert.AlertService.ListAlertCondRule:input_type -> core.alert.ListAlertCondRuleRequest
	37, // 54: core.alert.AlertService.GetAlertCondRule:input_type -> core.alert.GetAlertCondRuleRequest
	39, // 55: core.alert.AlertService.PutAlertCondRule:input_type -> core.alert.PutAlertCondRuleRequest
	41, // 56: core.alert.AlertService.DeleteAlertCondRule:input_type -> core.alert.DeleteAlertCondRuleRequest
	42, // 57: core.alert.AlertService.ListNotification:input_type -> core.alert.ListNotificationRequest
	44, // 58: core.alert.AlertService.GetNotification:input_type -> core.alert.GetNotificationRequest
	46, // 59: core.alert.AlertService.PutNotification:input_type -> core.alert.PutNotificationRequest
	48, // 60: core.alert.AlertService.DeleteNotification:input_type -> core.alert.DeleteNotificationRequest
	49, // 61: core.alert.AlertService.TestNotification:input_type -> core.alert.TestNotificationRequest
	50, // 62: core.alert.AlertService.ListAlertCondNotification:input_type -> core.alert.ListAlertCondNotificationRequest
	52, // 63: core.alert.AlertService.GetAlertCondNotification:input_type -> core.alert.GetAlertCondNotificationRequest
	54, // 64: core.alert.AlertService.PutAlertCondNotification:input_type -> core.alert.PutAlertCondNotificationRequest
	56, // 65: core.alert.AlertService.DeleteAlertCondNotification:input_type -> core.alert.DeleteAlertCondNotificationRequest
	57, // 66: core.alert.AlertService.AnalyzeAlert:input_type -> core.alert.AnalyzeAlertRequest
	1,  // 67: core.alert.AlertService.ListAlert:output_type -> core.alert.ListAlertResponse
	3,  // 68: core.alert.AlertService.GetAlert:output_type -> core.alert.GetAlertResponse
	5,  // 69: core.alert.AlertService.PutAlert:output_type -> core.alert.PutAlertResponse
	75, // 70: core.alert.AlertService.DeleteAlert:output_type -> google.protobuf.Empty
	8,  // 71: core.alert.AlertService.ListAlertHistory:output_type -> core.alert.ListAlertHistoryResponse
	10, // 72: core.alert.AlertService.GetAlertHistory:output_type -> core.alert.GetAlertHistoryResponse
	12, // 73: core.alert.AlertService.PutAlertHistory:output_type -> core.alert.PutAlertHistoryResponse
	75, // 74: core.alert.AlertService.DeleteAlertHistory:output_type -> google.protobuf.Empty
	15, // 75: core.alert.AlertService.ListRelAlertFinding:output_type -> core.alert.ListRelAlertFindingResponse
	17, // 76: core.alert.AlertService.GetRelAlertFinding:output_type -> core.alert.GetRelAlertFindingResponse
	19, // 77: core.alert.AlertService.PutRelAlertFinding:output_type -> core.alert.PutRelAlertFindingResponse
	75, // 78: core.alert.AlertService.DeleteRelAlertFinding:output_type -> google.protobuf.Empty
	22, // 79: core.alert.AlertService.ListAlertCondition:output_type -> core.alert.ListAlertConditionResponse
	24, // 80: core.alert.AlertService.GetAlertCondition:output_type -> core.alert.GetAlertConditionResponse
	26, // 81: core.alert.AlertService.PutAlertCondition:output_type -> core.alert.PutAlertConditionResponse
	75, // 82: core.alert.AlertService.DeleteAlertCondition:output_type -> google.protobuf.Empty
	29, // 83: core.alert.AlertService.ListAlertRule:output_type -> core.alert.ListAlertRuleResponse
	31, // 84: core.alert.AlertService.GetAlertRule:output_type -> core.alert.GetAlertRuleResponse
	33, // 85: core.alert.AlertService.PutAlertRule:output_type -> core.alert.PutAlertRuleResponse
	75, // 86: core.alert.AlertService.DeleteAlertRule:output_type -> google.protobuf.Empty
	36, // 87: core.alert.AlertService.ListAlertCondRule:output_type -> core.alert.ListAlertCondRuleResponse
	38, // 88: core.alert.AlertService.GetAlertCondRule:output_type -> core.alert.GetAlertCondRuleResponse
	40, // 89: core.alert.AlertService.PutAlertCondRule:output_type -> core.alert.PutAlertCondRuleResponse
	75, // 90: core.alert.AlertService.DeleteAlertCondRule:output_type -> google.protobuf.Empty
	43, // 91: core.alert.AlertService.ListNotification:output_type -> core.alert.ListNotificationResponse
	45, // 92: core.alert.AlertService.GetNotification:output_type -> core.alert.GetNotificationResponse
	47, // 93: core.alert.AlertService.PutNotification:output_type -> core.alert.PutNotificationResponse
	75, // 94: core.alert.AlertService.DeleteNotification:output_type -> google.protobuf.Empty
	75, // 95: core.alert.AlertService.TestNotification:output_type -> google.protobuf.Empty
	51, // 96: core.alert.AlertService.ListAlertCondNotification:output_type -> core.alert.ListAlertCondNotificationResponse
	53, // 97: core.alert.AlertService.GetAlertCondNotification:output_type -> core.alert.GetAlertCondNotificationResponse
	55, // 98: core.alert.AlertService.PutAlertCondNotification:output_type -> core.alert.PutAlertCondNotificationResponse
	75, // 99: core.alert.AlertService.DeleteAlertCondNotification:output_type -> google.protobuf.Empty
	75, // 100: core.alert.AlertService.AnalyzeAlert:output_type -> google.protobuf.Empty
	67, // [67:101] is the sub-list for method output_type
	33, // [33:67] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_alert_service_proto_init() }
func file_alert_service_proto_init() {
	if File_alert_service_proto != nil {
		return
	}
	file_alert_entity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_alert_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelAlertFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelAlertFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelAlertFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelAlertFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRelAlertFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRelAlertFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelAlertFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertConditionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertConditionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertCondRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertCondRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertCondRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertCondRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertCondRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertCondRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertCondRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertCondNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertCondNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertCondNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertCondNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertCondNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAlertCondNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertCondNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_alert_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_alert_service_proto_goTypes,
		DependencyIndexes: file_alert_service_proto_depIdxs,
		MessageInfos:      file_alert_service_proto_msgTypes,
	}.Build()
	File_alert_service_proto = out.File
	file_alert_service_proto_rawDesc = nil
	file_alert_service_proto_goTypes = nil
	file_alert_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AlertServiceClient is the client API for AlertService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlertServiceClient interface {
	// alert
	ListAlert(ctx context.Context, in *ListAlertRequest, opts ...grpc.CallOption) (*ListAlertResponse, error)
	GetAlert(ctx context.Context, in *GetAlertRequest, opts ...grpc.CallOption) (*GetAlertResponse, error)
	PutAlert(ctx context.Context, in *PutAlertRequest, opts ...grpc.CallOption) (*PutAlertResponse, error)
	DeleteAlert(ctx context.Context, in *DeleteAlertRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// alert_history
	ListAlertHistory(ctx context.Context, in *ListAlertHistoryRequest, opts ...grpc.CallOption) (*ListAlertHistoryResponse, error)
	GetAlertHistory(ctx context.Context, in *GetAlertHistoryRequest, opts ...grpc.CallOption) (*GetAlertHistoryResponse, error)
	PutAlertHistory(ctx context.Context, in *PutAlertHistoryRequest, opts ...grpc.CallOption) (*PutAlertHistoryResponse, error)
	DeleteAlertHistory(ctx context.Context, in *DeleteAlertHistoryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// rel_alert_finding
	ListRelAlertFinding(ctx context.Context, in *ListRelAlertFindingRequest, opts ...grpc.CallOption) (*ListRelAlertFindingResponse, error)
	GetRelAlertFinding(ctx context.Context, in *GetRelAlertFindingRequest, opts ...grpc.CallOption) (*GetRelAlertFindingResponse, error)
	PutRelAlertFinding(ctx context.Context, in *PutRelAlertFindingRequest, opts ...grpc.CallOption) (*PutRelAlertFindingResponse, error)
	DeleteRelAlertFinding(ctx context.Context, in *DeleteRelAlertFindingRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// alert_condition
	ListAlertCondition(ctx context.Context, in *ListAlertConditionRequest, opts ...grpc.CallOption) (*ListAlertConditionResponse, error)
	GetAlertCondition(ctx context.Context, in *GetAlertConditionRequest, opts ...grpc.CallOption) (*GetAlertConditionResponse, error)
	PutAlertCondition(ctx context.Context, in *PutAlertConditionRequest, opts ...grpc.CallOption) (*PutAlertConditionResponse, error)
	DeleteAlertCondition(ctx context.Context, in *DeleteAlertConditionRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// alert_rule
	ListAlertRule(ctx context.Context, in *ListAlertRuleRequest, opts ...grpc.CallOption) (*ListAlertRuleResponse, error)
	GetAlertRule(ctx context.Context, in *GetAlertRuleRequest, opts ...grpc.CallOption) (*GetAlertRuleResponse, error)
	PutAlertRule(ctx context.Context, in *PutAlertRuleRequest, opts ...grpc.CallOption) (*PutAlertRuleResponse, error)
	DeleteAlertRule(ctx context.Context, in *DeleteAlertRuleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// alert_cond_rule
	ListAlertCondRule(ctx context.Context, in *ListAlertCondRuleRequest, opts ...grpc.CallOption) (*ListAlertCondRuleResponse, error)
	GetAlertCondRule(ctx context.Context, in *GetAlertCondRuleRequest, opts ...grpc.CallOption) (*GetAlertCondRuleResponse, error)
	PutAlertCondRule(ctx context.Context, in *PutAlertCondRuleRequest, opts ...grpc.CallOption) (*PutAlertCondRuleResponse, error)
	DeleteAlertCondRule(ctx context.Context, in *DeleteAlertCondRuleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// notification
	ListNotification(ctx context.Context, in *ListNotificationRequest, opts ...grpc.CallOption) (*ListNotificationResponse, error)
	GetNotification(ctx context.Context, in *GetNotificationRequest, opts ...grpc.CallOption) (*GetNotificationResponse, error)
	PutNotification(ctx context.Context, in *PutNotificationRequest, opts ...grpc.CallOption) (*PutNotificationResponse, error)
	DeleteNotification(ctx context.Context, in *DeleteNotificationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TestNotification(ctx context.Context, in *TestNotificationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// alert_cond_notification
	ListAlertCondNotification(ctx context.Context, in *ListAlertCondNotificationRequest, opts ...grpc.CallOption) (*ListAlertCondNotificationResponse, error)
	GetAlertCondNotification(ctx context.Context, in *GetAlertCondNotificationRequest, opts ...grpc.CallOption) (*GetAlertCondNotificationResponse, error)
	PutAlertCondNotification(ctx context.Context, in *PutAlertCondNotificationRequest, opts ...grpc.CallOption) (*PutAlertCondNotificationResponse, error)
	DeleteAlertCondNotification(ctx context.Context, in *DeleteAlertCondNotificationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// AnalyzeAlert
	AnalyzeAlert(ctx context.Context, in *AnalyzeAlertRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type alertServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAlertServiceClient(cc grpc.ClientConnInterface) AlertServiceClient {
	return &alertServiceClient{cc}
}

func (c *alertServiceClient) ListAlert(ctx context.Context, in *ListAlertRequest, opts ...grpc.CallOption) (*ListAlertResponse, error) {
	out := new(ListAlertResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/ListAlert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetAlert(ctx context.Context, in *GetAlertRequest, opts ...grpc.CallOption) (*GetAlertResponse, error) {
	out := new(GetAlertResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/GetAlert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) PutAlert(ctx context.Context, in *PutAlertRequest, opts ...grpc.CallOption) (*PutAlertResponse, error) {
	out := new(PutAlertResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/PutAlert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) DeleteAlert(ctx context.Context, in *DeleteAlertRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/DeleteAlert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) ListAlertHistory(ctx context.Context, in *ListAlertHistoryRequest, opts ...grpc.CallOption) (*ListAlertHistoryResponse, error) {
	out := new(ListAlertHistoryResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/ListAlertHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetAlertHistory(ctx context.Context, in *GetAlertHistoryRequest, opts ...grpc.CallOption) (*GetAlertHistoryResponse, error) {
	out := new(GetAlertHistoryResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/GetAlertHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) PutAlertHistory(ctx context.Context, in *PutAlertHistoryRequest, opts ...grpc.CallOption) (*PutAlertHistoryResponse, error) {
	out := new(PutAlertHistoryResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/PutAlertHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) DeleteAlertHistory(ctx context.Context, in *DeleteAlertHistoryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/DeleteAlertHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) ListRelAlertFinding(ctx context.Context, in *ListRelAlertFindingRequest, opts ...grpc.CallOption) (*ListRelAlertFindingResponse, error) {
	out := new(ListRelAlertFindingResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/ListRelAlertFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetRelAlertFinding(ctx context.Context, in *GetRelAlertFindingRequest, opts ...grpc.CallOption) (*GetRelAlertFindingResponse, error) {
	out := new(GetRelAlertFindingResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/GetRelAlertFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) PutRelAlertFinding(ctx context.Context, in *PutRelAlertFindingRequest, opts ...grpc.CallOption) (*PutRelAlertFindingResponse, error) {
	out := new(PutRelAlertFindingResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/PutRelAlertFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) DeleteRelAlertFinding(ctx context.Context, in *DeleteRelAlertFindingRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/DeleteRelAlertFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) ListAlertCondition(ctx context.Context, in *ListAlertConditionRequest, opts ...grpc.CallOption) (*ListAlertConditionResponse, error) {
	out := new(ListAlertConditionResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/ListAlertCondition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetAlertCondition(ctx context.Context, in *GetAlertConditionRequest, opts ...grpc.CallOption) (*GetAlertConditionResponse, error) {
	out := new(GetAlertConditionResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/GetAlertCondition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) PutAlertCondition(ctx context.Context, in *PutAlertConditionRequest, opts ...grpc.CallOption) (*PutAlertConditionResponse, error) {
	out := new(PutAlertConditionResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/PutAlertCondition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) DeleteAlertCondition(ctx context.Context, in *DeleteAlertConditionRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/DeleteAlertCondition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) ListAlertRule(ctx context.Context, in *ListAlertRuleRequest, opts ...grpc.CallOption) (*ListAlertRuleResponse, error) {
	out := new(ListAlertRuleResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/ListAlertRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetAlertRule(ctx context.Context, in *GetAlertRuleRequest, opts ...grpc.CallOption) (*GetAlertRuleResponse, error) {
	out := new(GetAlertRuleResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/GetAlertRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) PutAlertRule(ctx context.Context, in *PutAlertRuleRequest, opts ...grpc.CallOption) (*PutAlertRuleResponse, error) {
	out := new(PutAlertRuleResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/PutAlertRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) DeleteAlertRule(ctx context.Context, in *DeleteAlertRuleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/DeleteAlertRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) ListAlertCondRule(ctx context.Context, in *ListAlertCondRuleRequest, opts ...grpc.CallOption) (*ListAlertCondRuleResponse, error) {
	out := new(ListAlertCondRuleResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/ListAlertCondRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetAlertCondRule(ctx context.Context, in *GetAlertCondRuleRequest, opts ...grpc.CallOption) (*GetAlertCondRuleResponse, error) {
	out := new(GetAlertCondRuleResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/GetAlertCondRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) PutAlertCondRule(ctx context.Context, in *PutAlertCondRuleRequest, opts ...grpc.CallOption) (*PutAlertCondRuleResponse, error) {
	out := new(PutAlertCondRuleResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/PutAlertCondRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) DeleteAlertCondRule(ctx context.Context, in *DeleteAlertCondRuleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/DeleteAlertCondRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) ListNotification(ctx context.Context, in *ListNotificationRequest, opts ...grpc.CallOption) (*ListNotificationResponse, error) {
	out := new(ListNotificationResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/ListNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetNotification(ctx context.Context, in *GetNotificationRequest, opts ...grpc.CallOption) (*GetNotificationResponse, error) {
	out := new(GetNotificationResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/GetNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) PutNotification(ctx context.Context, in *PutNotificationRequest, opts ...grpc.CallOption) (*PutNotificationResponse, error) {
	out := new(PutNotificationResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/PutNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) DeleteNotification(ctx context.Context, in *DeleteNotificationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/DeleteNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) TestNotification(ctx context.Context, in *TestNotificationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/TestNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) ListAlertCondNotification(ctx context.Context, in *ListAlertCondNotificationRequest, opts ...grpc.CallOption) (*ListAlertCondNotificationResponse, error) {
	out := new(ListAlertCondNotificationResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/ListAlertCondNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetAlertCondNotification(ctx context.Context, in *GetAlertCondNotificationRequest, opts ...grpc.CallOption) (*GetAlertCondNotificationResponse, error) {
	out := new(GetAlertCondNotificationResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/GetAlertCondNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) PutAlertCondNotification(ctx context.Context, in *PutAlertCondNotificationRequest, opts ...grpc.CallOption) (*PutAlertCondNotificationResponse, error) {
	out := new(PutAlertCondNotificationResponse)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/PutAlertCondNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) DeleteAlertCondNotification(ctx context.Context, in *DeleteAlertCondNotificationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/DeleteAlertCondNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) AnalyzeAlert(ctx context.Context, in *AnalyzeAlertRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/core.alert.AlertService/AnalyzeAlert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlertServiceServer is the server API for AlertService service.
type AlertServiceServer interface {
	// alert
	ListAlert(context.Context, *ListAlertRequest) (*ListAlertResponse, error)
	GetAlert(context.Context, *GetAlertRequest) (*GetAlertResponse, error)
	PutAlert(context.Context, *PutAlertRequest) (*PutAlertResponse, error)
	DeleteAlert(context.Context, *DeleteAlertRequest) (*emptypb.Empty, error)
	// alert_history
	ListAlertHistory(context.Context, *ListAlertHistoryRequest) (*ListAlertHistoryResponse, error)
	GetAlertHistory(context.Context, *GetAlertHistoryRequest) (*GetAlertHistoryResponse, error)
	PutAlertHistory(context.Context, *PutAlertHistoryRequest) (*PutAlertHistoryResponse, error)
	DeleteAlertHistory(context.Context, *DeleteAlertHistoryRequest) (*emptypb.Empty, error)
	// rel_alert_finding
	ListRelAlertFinding(context.Context, *ListRelAlertFindingRequest) (*ListRelAlertFindingResponse, error)
	GetRelAlertFinding(context.Context, *GetRelAlertFindingRequest) (*GetRelAlertFindingResponse, error)
	PutRelAlertFinding(context.Context, *PutRelAlertFindingRequest) (*PutRelAlertFindingResponse, error)
	DeleteRelAlertFinding(context.Context, *DeleteRelAlertFindingRequest) (*emptypb.Empty, error)
	// alert_condition
	ListAlertCondition(context.Context, *ListAlertConditionRequest) (*ListAlertConditionResponse, error)
	GetAlertCondition(context.Context, *GetAlertConditionRequest) (*GetAlertConditionResponse, error)
	PutAlertCondition(context.Context, *PutAlertConditionRequest) (*PutAlertConditionResponse, error)
	DeleteAlertCondition(context.Context, *DeleteAlertConditionRequest) (*emptypb.Empty, error)
	// alert_rule
	ListAlertRule(context.Context, *ListAlertRuleRequest) (*ListAlertRuleResponse, error)
	GetAlertRule(context.Context, *GetAlertRuleRequest) (*GetAlertRuleResponse, error)
	PutAlertRule(context.Context, *PutAlertRuleRequest) (*PutAlertRuleResponse, error)
	DeleteAlertRule(context.Context, *DeleteAlertRuleRequest) (*emptypb.Empty, error)
	// alert_cond_rule
	ListAlertCondRule(context.Context, *ListAlertCondRuleRequest) (*ListAlertCondRuleResponse, error)
	GetAlertCondRule(context.Context, *GetAlertCondRuleRequest) (*GetAlertCondRuleResponse, error)
	PutAlertCondRule(context.Context, *PutAlertCondRuleRequest) (*PutAlertCondRuleResponse, error)
	DeleteAlertCondRule(context.Context, *DeleteAlertCondRuleRequest) (*emptypb.Empty, error)
	// notification
	ListNotification(context.Context, *ListNotificationRequest) (*ListNotificationResponse, error)
	GetNotification(context.Context, *GetNotificationRequest) (*GetNotificationResponse, error)
	PutNotification(context.Context, *PutNotificationRequest) (*PutNotificationResponse, error)
	DeleteNotification(context.Context, *DeleteNotificationRequest) (*emptypb.Empty, error)
	TestNotification(context.Context, *TestNotificationRequest) (*emptypb.Empty, error)
	// alert_cond_notification
	ListAlertCondNotification(context.Context, *ListAlertCondNotificationRequest) (*ListAlertCondNotificationResponse, error)
	GetAlertCondNotification(context.Context, *GetAlertCondNotificationRequest) (*GetAlertCondNotificationResponse, error)
	PutAlertCondNotification(context.Context, *PutAlertCondNotificationRequest) (*PutAlertCondNotificationResponse, error)
	DeleteAlertCondNotification(context.Context, *DeleteAlertCondNotificationRequest) (*emptypb.Empty, error)
	// AnalyzeAlert
	AnalyzeAlert(context.Context, *AnalyzeAlertRequest) (*emptypb.Empty, error)
}

// UnimplementedAlertServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAlertServiceServer struct {
}

func (*UnimplementedAlertServiceServer) ListAlert(context.Context, *ListAlertRequest) (*ListAlertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAlert not implemented")
}
func (*UnimplementedAlertServiceServer) GetAlert(context.Context, *GetAlertRequest) (*GetAlertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlert not implemented")
}
func (*UnimplementedAlertServiceServer) PutAlert(context.Context, *PutAlertRequest) (*PutAlertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAlert not implemented")
}
func (*UnimplementedAlertServiceServer) DeleteAlert(context.Context, *DeleteAlertRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlert not implemented")
}
func (*UnimplementedAlertServiceServer) ListAlertHistory(context.Context, *ListAlertHistoryRequest) (*ListAlertHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAlertHistory not implemented")
}
func (*UnimplementedAlertServiceServer) GetAlertHistory(context.Context, *GetAlertHistoryRequest) (*GetAlertHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlertHistory not implemented")
}
func (*UnimplementedAlertServiceServer) PutAlertHistory(context.Context, *PutAlertHistoryRequest) (*PutAlertHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAlertHistory not implemented")
}
func (*UnimplementedAlertServiceServer) DeleteAlertHistory(context.Context, *DeleteAlertHistoryRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlertHistory not implemented")
}
func (*UnimplementedAlertServiceServer) ListRelAlertFinding(context.Context, *ListRelAlertFindingRequest) (*ListRelAlertFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRelAlertFinding not implemented")
}
func (*UnimplementedAlertServiceServer) GetRelAlertFinding(context.Context, *GetRelAlertFindingRequest) (*GetRelAlertFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelAlertFinding not implemented")
}
func (*UnimplementedAlertServiceServer) PutRelAlertFinding(context.Context, *PutRelAlertFindingRequest) (*PutRelAlertFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutRelAlertFinding not implemented")
}
func (*UnimplementedAlertServiceServer) DeleteRelAlertFinding(context.Context, *DeleteRelAlertFindingRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRelAlertFinding not implemented")
}
func (*UnimplementedAlertServiceServer) ListAlertCondition(context.Context, *ListAlertConditionRequest) (*ListAlertConditionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAlertCondition not implemented")
}
func (*UnimplementedAlertServiceServer) GetAlertCondition(context.Context, *GetAlertConditionRequest) (*GetAlertConditionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlertCondition not implemented")
}
func (*UnimplementedAlertServiceServer) PutAlertCondition(context.Context, *PutAlertConditionRequest) (*PutAlertConditionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAlertCondition not implemented")
}
func (*UnimplementedAlertServiceServer) DeleteAlertCondition(context.Context, *DeleteAlertConditionRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlertCondition not implemented")
}
func (*UnimplementedAlertServiceServer) ListAlertRule(context.Context, *ListAlertRuleRequest) (*ListAlertRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAlertRule not implemented")
}
func (*UnimplementedAlertServiceServer) GetAlertRule(context.Context, *GetAlertRuleRequest) (*GetAlertRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlertRule not implemented")
}
func (*UnimplementedAlertServiceServer) PutAlertRule(context.Context, *PutAlertRuleRequest) (*PutAlertRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAlertRule not implemented")
}
func (*UnimplementedAlertServiceServer) DeleteAlertRule(context.Context, *DeleteAlertRuleRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlertRule not implemented")
}
func (*UnimplementedAlertServiceServer) ListAlertCondRule(context.Context, *ListAlertCondRuleRequest) (*ListAlertCondRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAlertCondRule not implemented")
}
func (*UnimplementedAlertServiceServer) GetAlertCondRule(context.Context, *GetAlertCondRuleRequest) (*GetAlertCondRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlertCondRule not implemented")
}
func (*UnimplementedAlertServiceServer) PutAlertCondRule(context.Context, *PutAlertCondRuleRequest) (*PutAlertCondRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAlertCondRule not implemented")
}
func (*UnimplementedAlertServiceServer) DeleteAlertCondRule(context.Context, *DeleteAlertCondRuleRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlertCondRule not implemented")
}
func (*UnimplementedAlertServiceServer) ListNotification(context.Context, *ListNotificationRequest) (*ListNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNotification not implemented")
}
func (*UnimplementedAlertServiceServer) GetNotification(context.Context, *GetNotificationRequest) (*GetNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNotification not implemented")
}
func (*UnimplementedAlertServiceServer) PutNotification(context.Context, *PutNotificationRequest) (*PutNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutNotification not implemented")
}
func (*UnimplementedAlertServiceServer) DeleteNotification(context.Context, *DeleteNotificationRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNotification not implemented")
}
func (*UnimplementedAlertServiceServer) TestNotification(context.Context, *TestNotificationRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestNotification not implemented")
}
func (*UnimplementedAlertServiceServer) ListAlertCondNotification(context.Context, *ListAlertCondNotificationRequest) (*ListAlertCondNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAlertCondNotification not implemented")
}
func (*UnimplementedAlertServiceServer) GetAlertCondNotification(context.Context, *GetAlertCondNotificationRequest) (*GetAlertCondNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlertCondNotification not implemented")
}
func (*UnimplementedAlertServiceServer) PutAlertCondNotification(context.Context, *PutAlertCondNotificationRequest) (*PutAlertCondNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAlertCondNotification not implemented")
}
func (*UnimplementedAlertServiceServer) DeleteAlertCondNotification(context.Context, *DeleteAlertCondNotificationRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAlertCondNotification not implemented")
}
func (*UnimplementedAlertServiceServer) AnalyzeAlert(context.Context, *AnalyzeAlertRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnalyzeAlert not implemented")
}

func RegisterAlertServiceServer(s *grpc.Server, srv AlertServiceServer) {
	s.RegisterService(&_AlertService_serviceDesc, srv)
}

func _AlertService_ListAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).ListAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/ListAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).ListAlert(ctx, req.(*ListAlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/GetAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetAlert(ctx, req.(*GetAlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_PutAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).PutAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/PutAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).PutAlert(ctx, req.(*PutAlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_DeleteAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).DeleteAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/DeleteAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).DeleteAlert(ctx, req.(*DeleteAlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_ListAlertHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAlertHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).ListAlertHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/ListAlertHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).ListAlertHistory(ctx, req.(*ListAlertHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetAlertHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlertHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetAlertHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/GetAlertHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetAlertHistory(ctx, req.(*GetAlertHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_PutAlertHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAlertHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).PutAlertHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/PutAlertHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).PutAlertHistory(ctx, req.(*PutAlertHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_DeleteAlertHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlertHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).DeleteAlertHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/DeleteAlertHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).DeleteAlertHistory(ctx, req.(*DeleteAlertHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_ListRelAlertFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRelAlertFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).ListRelAlertFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/ListRelAlertFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).ListRelAlertFinding(ctx, req.(*ListRelAlertFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetRelAlertFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelAlertFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetRelAlertFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/GetRelAlertFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetRelAlertFinding(ctx, req.(*GetRelAlertFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_PutRelAlertFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRelAlertFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).PutRelAlertFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/PutRelAlertFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).PutRelAlertFinding(ctx, req.(*PutRelAlertFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_DeleteRelAlertFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRelAlertFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).DeleteRelAlertFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/DeleteRelAlertFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).DeleteRelAlertFinding(ctx, req.(*DeleteRelAlertFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_ListAlertCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAlertConditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).ListAlertCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/ListAlertCondition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).ListAlertCondition(ctx, req.(*ListAlertConditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetAlertCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlertConditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetAlertCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/GetAlertCondition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetAlertCondition(ctx, req.(*GetAlertConditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_PutAlertCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAlertConditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).PutAlertCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/PutAlertCondition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).PutAlertCondition(ctx, req.(*PutAlertConditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_DeleteAlertCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlertConditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).DeleteAlertCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/DeleteAlertCondition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).DeleteAlertCondition(ctx, req.(*DeleteAlertConditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_ListAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAlertRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).ListAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/ListAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).ListAlertRule(ctx, req.(*ListAlertRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlertRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/GetAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetAlertRule(ctx, req.(*GetAlertRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_PutAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAlertRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).PutAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/PutAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).PutAlertRule(ctx, req.(*PutAlertRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_DeleteAlertRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlertRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).DeleteAlertRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/DeleteAlertRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).DeleteAlertRule(ctx, req.(*DeleteAlertRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_ListAlertCondRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAlertCondRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).ListAlertCondRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/ListAlertCondRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).ListAlertCondRule(ctx, req.(*ListAlertCondRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetAlertCondRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlertCondRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetAlertCondRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/GetAlertCondRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetAlertCondRule(ctx, req.(*GetAlertCondRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_PutAlertCondRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAlertCondRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).PutAlertCondRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/PutAlertCondRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).PutAlertCondRule(ctx, req.(*PutAlertCondRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_DeleteAlertCondRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlertCondRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).DeleteAlertCondRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/DeleteAlertCondRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).DeleteAlertCondRule(ctx, req.(*DeleteAlertCondRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_ListNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).ListNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/ListNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).ListNotification(ctx, req.(*ListNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/GetNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetNotification(ctx, req.(*GetNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_PutNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).PutNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/PutNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).PutNotification(ctx, req.(*PutNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_DeleteNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).DeleteNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/DeleteNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).DeleteNotification(ctx, req.(*DeleteNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_TestNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).TestNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/TestNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).TestNotification(ctx, req.(*TestNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_ListAlertCondNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAlertCondNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).ListAlertCondNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/ListAlertCondNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).ListAlertCondNotification(ctx, req.(*ListAlertCondNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetAlertCondNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlertCondNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetAlertCondNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/GetAlertCondNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetAlertCondNotification(ctx, req.(*GetAlertCondNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_PutAlertCondNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAlertCondNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).PutAlertCondNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/PutAlertCondNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).PutAlertCondNotification(ctx, req.(*PutAlertCondNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_DeleteAlertCondNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAlertCondNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).DeleteAlertCondNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/DeleteAlertCondNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).DeleteAlertCondNotification(ctx, req.(*DeleteAlertCondNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_AnalyzeAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnalyzeAlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).AnalyzeAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.alert.AlertService/AnalyzeAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).AnalyzeAlert(ctx, req.(*AnalyzeAlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlertService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.alert.AlertService",
	HandlerType: (*AlertServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAlert",
			Handler:    _AlertService_ListAlert_Handler,
		},
		{
			MethodName: "GetAlert",
			Handler:    _AlertService_GetAlert_Handler,
		},
		{
			MethodName: "PutAlert",
			Handler:    _AlertService_PutAlert_Handler,
		},
		{
			MethodName: "DeleteAlert",
			Handler:    _AlertService_DeleteAlert_Handler,
		},
		{
			MethodName: "ListAlertHistory",
			Handler:    _AlertService_ListAlertHistory_Handler,
		},
		{
			MethodName: "GetAlertHistory",
			Handler:    _AlertService_GetAlertHistory_Handler,
		},
		{
			MethodName: "PutAlertHistory",
			Handler:    _AlertService_PutAlertHistory_Handler,
		},
		{
			MethodName: "DeleteAlertHistory",
			Handler:    _AlertService_DeleteAlertHistory_Handler,
		},
		{
			MethodName: "ListRelAlertFinding",
			Handler:    _AlertService_ListRelAlertFinding_Handler,
		},
		{
			MethodName: "GetRelAlertFinding",
			Handler:    _AlertService_GetRelAlertFinding_Handler,
		},
		{
			MethodName: "PutRelAlertFinding",
			Handler:    _AlertService_PutRelAlertFinding_Handler,
		},
		{
			MethodName: "DeleteRelAlertFinding",
			Handler:    _AlertService_DeleteRelAlertFinding_Handler,
		},
		{
			MethodName: "ListAlertCondition",
			Handler:    _AlertService_ListAlertCondition_Handler,
		},
		{
			MethodName: "GetAlertCondition",
			Handler:    _AlertService_GetAlertCondition_Handler,
		},
		{
			MethodName: "PutAlertCondition",
			Handler:    _AlertService_PutAlertCondition_Handler,
		},
		{
			MethodName: "DeleteAlertCondition",
			Handler:    _AlertService_DeleteAlertCondition_Handler,
		},
		{
			MethodName: "ListAlertRule",
			Handler:    _AlertService_ListAlertRule_Handler,
		},
		{
			MethodName: "GetAlertRule",
			Handler:    _AlertService_GetAlertRule_Handler,
		},
		{
			MethodName: "PutAlertRule",
			Handler:    _AlertService_PutAlertRule_Handler,
		},
		{
			MethodName: "DeleteAlertRule",
			Handler:    _AlertService_DeleteAlertRule_Handler,
		},
		{
			MethodName: "ListAlertCondRule",
			Handler:    _AlertService_ListAlertCondRule_Handler,
		},
		{
			MethodName: "GetAlertCondRule",
			Handler:    _AlertService_GetAlertCondRule_Handler,
		},
		{
			MethodName: "PutAlertCondRule",
			Handler:    _AlertService_PutAlertCondRule_Handler,
		},
		{
			MethodName: "DeleteAlertCondRule",
			Handler:    _AlertService_DeleteAlertCondRule_Handler,
		},
		{
			MethodName: "ListNotification",
			Handler:    _AlertService_ListNotification_Handler,
		},
		{
			MethodName: "GetNotification",
			Handler:    _AlertService_GetNotification_Handler,
		},
		{
			MethodName: "PutNotification",
			Handler:    _AlertService_PutNotification_Handler,
		},
		{
			MethodName: "DeleteNotification",
			Handler:    _AlertService_DeleteNotification_Handler,
		},
		{
			MethodName: "TestNotification",
			Handler:    _AlertService_TestNotification_Handler,
		},
		{
			MethodName: "ListAlertCondNotification",
			Handler:    _AlertService_ListAlertCondNotification_Handler,
		},
		{
			MethodName: "GetAlertCondNotification",
			Handler:    _AlertService_GetAlertCondNotification_Handler,
		},
		{
			MethodName: "PutAlertCondNotification",
			Handler:    _AlertService_PutAlertCondNotification_Handler,
		},
		{
			MethodName: "DeleteAlertCondNotification",
			Handler:    _AlertService_DeleteAlertCondNotification_Handler,
		},
		{
			MethodName: "AnalyzeAlert",
			Handler:    _AlertService_AnalyzeAlert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alert/service.proto",
}
