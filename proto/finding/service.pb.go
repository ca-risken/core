// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.12.1
// source: finding/service.proto

package finding

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Since     string `protobuf:"bytes,2,opt,name=since,proto3" json:"since,omitempty"`
}

func (x *ListFindingRequest) Reset() {
	*x = ListFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFindingRequest) ProtoMessage() {}

func (x *ListFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFindingRequest.ProtoReflect.Descriptor instead.
func (*ListFindingRequest) Descriptor() ([]byte, []int) {
	return file_finding_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListFindingRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListFindingRequest) GetSince() string {
	if x != nil {
		return x.Since
	}
	return ""
}

type ListFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectIds []string `protobuf:"bytes,1,rep,name=project_ids,json=projectIds,proto3" json:"project_ids,omitempty"`
}

func (x *ListFindingResponse) Reset() {
	*x = ListFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFindingResponse) ProtoMessage() {}

func (x *ListFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFindingResponse.ProtoReflect.Descriptor instead.
func (*ListFindingResponse) Descriptor() ([]byte, []int) {
	return file_finding_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListFindingResponse) GetProjectIds() []string {
	if x != nil {
		return x.ProjectIds
	}
	return nil
}

type GetFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindingId string `protobuf:"bytes,1,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
}

func (x *GetFindingRequest) Reset() {
	*x = GetFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFindingRequest) ProtoMessage() {}

func (x *GetFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFindingRequest.ProtoReflect.Descriptor instead.
func (*GetFindingRequest) Descriptor() ([]byte, []int) {
	return file_finding_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetFindingRequest) GetFindingId() string {
	if x != nil {
		return x.FindingId
	}
	return ""
}

type GetFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Finding `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetFindingResponse) Reset() {
	*x = GetFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFindingResponse) ProtoMessage() {}

func (x *GetFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFindingResponse.ProtoReflect.Descriptor instead.
func (*GetFindingResponse) Descriptor() ([]byte, []int) {
	return file_finding_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetFindingResponse) GetData() *Finding {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_finding_service_proto protoreflect.FileDescriptor

var file_finding_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x15, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x66,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x36, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22,
	0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x32, 0xb5, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x31, 0x5a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x79, 0x62, 0x65, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x69, 0x6d, 0x6f, 0x73, 0x61, 0x2d, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_finding_service_proto_rawDescOnce sync.Once
	file_finding_service_proto_rawDescData = file_finding_service_proto_rawDesc
)

func file_finding_service_proto_rawDescGZIP() []byte {
	file_finding_service_proto_rawDescOnce.Do(func() {
		file_finding_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_finding_service_proto_rawDescData)
	})
	return file_finding_service_proto_rawDescData
}

var file_finding_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_finding_service_proto_goTypes = []interface{}{
	(*ListFindingRequest)(nil),  // 0: core.finding.ListFindingRequest
	(*ListFindingResponse)(nil), // 1: core.finding.ListFindingResponse
	(*GetFindingRequest)(nil),   // 2: core.finding.GetFindingRequest
	(*GetFindingResponse)(nil),  // 3: core.finding.GetFindingResponse
	(*Finding)(nil),             // 4: core.finding.Finding
}
var file_finding_service_proto_depIdxs = []int32{
	4, // 0: core.finding.GetFindingResponse.data:type_name -> core.finding.Finding
	0, // 1: core.finding.FindingService.ListFinding:input_type -> core.finding.ListFindingRequest
	2, // 2: core.finding.FindingService.GetFinding:input_type -> core.finding.GetFindingRequest
	1, // 3: core.finding.FindingService.ListFinding:output_type -> core.finding.ListFindingResponse
	3, // 4: core.finding.FindingService.GetFinding:output_type -> core.finding.GetFindingResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_finding_service_proto_init() }
func file_finding_service_proto_init() {
	if File_finding_service_proto != nil {
		return
	}
	file_finding_finding_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_finding_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_finding_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_finding_service_proto_goTypes,
		DependencyIndexes: file_finding_service_proto_depIdxs,
		MessageInfos:      file_finding_service_proto_msgTypes,
	}.Build()
	File_finding_service_proto = out.File
	file_finding_service_proto_rawDesc = nil
	file_finding_service_proto_goTypes = nil
	file_finding_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FindingServiceClient is the client API for FindingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FindingServiceClient interface {
	ListFinding(ctx context.Context, in *ListFindingRequest, opts ...grpc.CallOption) (*ListFindingResponse, error)
	GetFinding(ctx context.Context, in *GetFindingRequest, opts ...grpc.CallOption) (*GetFindingResponse, error)
}

type findingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFindingServiceClient(cc grpc.ClientConnInterface) FindingServiceClient {
	return &findingServiceClient{cc}
}

func (c *findingServiceClient) ListFinding(ctx context.Context, in *ListFindingRequest, opts ...grpc.CallOption) (*ListFindingResponse, error) {
	out := new(ListFindingResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/ListFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) GetFinding(ctx context.Context, in *GetFindingRequest, opts ...grpc.CallOption) (*GetFindingResponse, error) {
	out := new(GetFindingResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/GetFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FindingServiceServer is the server API for FindingService service.
type FindingServiceServer interface {
	ListFinding(context.Context, *ListFindingRequest) (*ListFindingResponse, error)
	GetFinding(context.Context, *GetFindingRequest) (*GetFindingResponse, error)
}

// UnimplementedFindingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFindingServiceServer struct {
}

func (*UnimplementedFindingServiceServer) ListFinding(context.Context, *ListFindingRequest) (*ListFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFinding not implemented")
}
func (*UnimplementedFindingServiceServer) GetFinding(context.Context, *GetFindingRequest) (*GetFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFinding not implemented")
}

func RegisterFindingServiceServer(s *grpc.Server, srv FindingServiceServer) {
	s.RegisterService(&_FindingService_serviceDesc, srv)
}

func _FindingService_ListFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).ListFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/ListFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).ListFinding(ctx, req.(*ListFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_GetFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).GetFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/GetFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).GetFinding(ctx, req.(*GetFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FindingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.finding.FindingService",
	HandlerType: (*FindingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListFinding",
			Handler:    _FindingService_ListFinding_Handler,
		},
		{
			MethodName: "GetFinding",
			Handler:    _FindingService_GetFinding_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "finding/service.proto",
}
