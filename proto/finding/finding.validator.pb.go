// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: finding/finding.proto

package finding

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ListFindingRequest) Validate() error {
	for _, item := range this.DataSource {
		if !(len(item) < 64) {
			return github_com_mwitkow_go_proto_validators.FieldError("DataSource", fmt.Errorf(`value '%v' must have a length smaller than '64'`, item))
		}
	}
	for _, item := range this.ResourceName {
		if !(len(item) < 200) {
			return github_com_mwitkow_go_proto_validators.FieldError("ResourceName", fmt.Errorf(`value '%v' must have a length smaller than '200'`, item))
		}
	}
	if !(this.FromScore > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("FromScore", fmt.Errorf(`value '%v' must be strictly greater than '0'`, this.FromScore))
	}
	if !(this.FromScore <= 1) {
		return github_com_mwitkow_go_proto_validators.FieldError("FromScore", fmt.Errorf(`value '%v' must be lower than or equal to '1'`, this.FromScore))
	}
	if !(this.ToScore > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("ToScore", fmt.Errorf(`value '%v' must be strictly greater than '0'`, this.ToScore))
	}
	if !(this.ToScore <= 1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ToScore", fmt.Errorf(`value '%v' must be lower than or equal to '1'`, this.ToScore))
	}
	return nil
}
func (this *ListFindingResponse) Validate() error {
	return nil
}
func (this *GetFindingRequest) Validate() error {
	return nil
}
func (this *GetFindingResponse) Validate() error {
	if this.Finding != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Finding); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Finding", err)
		}
	}
	return nil
}
func (this *PutFindingRequest) Validate() error {
	if this.Finding != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Finding); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Finding", err)
		}
	}
	return nil
}
func (this *PutFindingResponse) Validate() error {
	if this.Finding != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Finding); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Finding", err)
		}
	}
	return nil
}
func (this *DeleteFindingRequest) Validate() error {
	return nil
}
func (this *ListFindingTagRequest) Validate() error {
	return nil
}
func (this *ListFindingTagResponse) Validate() error {
	for _, item := range this.Tag {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tag", err)
			}
		}
	}
	return nil
}
func (this *TagFindingRequest) Validate() error {
	if this.Tag != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Tag); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Tag", err)
		}
	}
	return nil
}
func (this *TagFindingResponse) Validate() error {
	if this.Tag != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Tag); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Tag", err)
		}
	}
	return nil
}
func (this *UntagFindingRequest) Validate() error {
	return nil
}
func (this *ListResourceRequest) Validate() error {
	for _, item := range this.ResourceName {
		if !(len(item) < 200) {
			return github_com_mwitkow_go_proto_validators.FieldError("ResourceName", fmt.Errorf(`value '%v' must have a length smaller than '200'`, item))
		}
	}
	if !(this.FromSumScore > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("FromSumScore", fmt.Errorf(`value '%v' must be strictly greater than '0'`, this.FromSumScore))
	}
	if !(this.ToSumScore > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("ToSumScore", fmt.Errorf(`value '%v' must be strictly greater than '0'`, this.ToSumScore))
	}
	return nil
}
func (this *ListResourceResponse) Validate() error {
	return nil
}
func (this *GetResourceRequest) Validate() error {
	return nil
}
func (this *GetResourceResponse) Validate() error {
	if this.Resource != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Resource); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Resource", err)
		}
	}
	return nil
}
func (this *PutResourceRequest) Validate() error {
	if this.Resource != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Resource); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Resource", err)
		}
	}
	return nil
}
func (this *PutResourceResponse) Validate() error {
	if this.Resource != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Resource); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Resource", err)
		}
	}
	return nil
}
func (this *DeleteResourceRequest) Validate() error {
	return nil
}
func (this *ListResourceTagRequest) Validate() error {
	return nil
}
func (this *ListResourceTagResponse) Validate() error {
	for _, item := range this.Tag {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tag", err)
			}
		}
	}
	return nil
}
func (this *TagResourceRequest) Validate() error {
	if this.Tag != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Tag); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Tag", err)
		}
	}
	return nil
}
func (this *TagResourceResponse) Validate() error {
	if this.Tag != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Tag); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Tag", err)
		}
	}
	return nil
}
func (this *UntagResourceRequest) Validate() error {
	return nil
}
func (this *Finding) Validate() error {
	return nil
}
func (this *FindingForUpsert) Validate() error {
	if !(len(this.Description) < 200) {
		return github_com_mwitkow_go_proto_validators.FieldError("Description", fmt.Errorf(`value '%v' must have a length smaller than '200'`, this.Description))
	}
	if !(len(this.DataSource) < 64) {
		return github_com_mwitkow_go_proto_validators.FieldError("DataSource", fmt.Errorf(`value '%v' must have a length smaller than '64'`, this.DataSource))
	}
	if !(this.OriginalScore >= 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("OriginalScore", fmt.Errorf(`value '%v' must be greater than or equal to '0'`, this.OriginalScore))
	}
	if !(this.OriginalScore <= 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("OriginalScore", fmt.Errorf(`value '%v' must be lower than or equal to '100'`, this.OriginalScore))
	}
	if !(this.OriginalMaxScore >= 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("OriginalMaxScore", fmt.Errorf(`value '%v' must be greater than or equal to '0'`, this.OriginalMaxScore))
	}
	if !(this.OriginalMaxScore <= 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("OriginalMaxScore", fmt.Errorf(`value '%v' must be lower than or equal to '100'`, this.OriginalMaxScore))
	}
	if !(this.Score >= 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Score", fmt.Errorf(`value '%v' must be greater than or equal to '0'`, this.Score))
	}
	if !(this.Score <= 1) {
		return github_com_mwitkow_go_proto_validators.FieldError("Score", fmt.Errorf(`value '%v' must be lower than or equal to '1'`, this.Score))
	}
	return nil
}
func (this *FindingTag) Validate() error {
	return nil
}
func (this *FindingTagForUpsert) Validate() error {
	if !(len(this.TagKey) < 64) {
		return github_com_mwitkow_go_proto_validators.FieldError("TagKey", fmt.Errorf(`value '%v' must have a length smaller than '64'`, this.TagKey))
	}
	if !(len(this.TagValue) < 200) {
		return github_com_mwitkow_go_proto_validators.FieldError("TagValue", fmt.Errorf(`value '%v' must have a length smaller than '200'`, this.TagValue))
	}
	return nil
}
func (this *Resource) Validate() error {
	return nil
}
func (this *ResourceForUpsert) Validate() error {
	return nil
}
func (this *ResourceTag) Validate() error {
	return nil
}
func (this *ResourceTagForUpsert) Validate() error {
	if !(len(this.TagKey) < 64) {
		return github_com_mwitkow_go_proto_validators.FieldError("TagKey", fmt.Errorf(`value '%v' must have a length smaller than '64'`, this.TagKey))
	}
	if !(len(this.TagValue) < 200) {
		return github_com_mwitkow_go_proto_validators.FieldError("TagValue", fmt.Errorf(`value '%v' must have a length smaller than '200'`, this.TagValue))
	}
	return nil
}
func (this *Empty) Validate() error {
	return nil
}
