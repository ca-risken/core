syntax = "proto3";

package core.finding;
option go_package = "github.com/ca-risken/core/proto/finding";

/*
 * Entity
 */

// Finding
message Finding {
  uint64 finding_id = 1;
  string description = 2;
  string data_source = 3;
  string data_source_id = 4;
  string resource_name = 5;
  uint32 project_id = 6;
  float original_score = 7;
  float original_max_score = 8;
  float score = 9;
  string data = 10;
  int64 created_at = 11;
  int64 updated_at = 12;
}

// Finding For Upsert
// (Unique keys: project_id, data_source, data_source_id)
message FindingForUpsert {
  string description = 1;
  string data_source = 2;
  string data_source_id = 3;
  string resource_name = 4;
  uint32 project_id = 5;
  float original_score = 6;
  float original_max_score = 7;
  string data = 8;
}

message FindingBatchForUpsert {
  FindingForUpsert finding = 1;
  RecommendForBatch recommend = 2;
  repeated FindingTagForBatch tag = 3;
}

// FindingTag
message FindingTag {
  uint64 finding_tag_id = 1;
  uint64 finding_id = 2;
  uint32 project_id = 3;
  string tag = 4;
  int64 created_at = 5;
  int64 updated_at = 6;
}

// FindingTag For Upsert
// (Unique keys: finding_id, tag_key)
message FindingTagForUpsert {
  uint64 finding_id = 1;
  uint32 project_id = 2;
  string tag = 3;
}

// Resource
message Resource {
  uint64 resource_id = 1;
  string resource_name = 2;
  uint32 project_id = 3;
  int64 created_at = 4;
  int64 updated_at = 5;
}

// Resource For upsert
// (Unique keys: project_id, resource_name)
message ResourceForUpsert {
  string resource_name = 1;
  uint32 project_id = 2;
}

// ResourceBatchForUpsert
message ResourceBatchForUpsert {
  ResourceForUpsert resource = 1;
  repeated ResourceTagForBatch tag = 2;
}

// ResourceTag
message ResourceTag {
  uint64 resource_tag_id = 1;
  uint64 resource_id = 2;
  uint32 project_id = 3;
  string tag = 4;
  int64 created_at = 5;
  int64 updated_at = 6;
}

// ResourceTag For upsert
// (Unique keys: resource_id, tag_key)
message ResourceTagForUpsert {
  uint64 resource_id = 1;
  uint32 project_id = 2;
  string tag = 3;
}

// PendFinding
message PendFinding {
  uint64 finding_id = 1;
  uint32 project_id = 2;
  string note = 3;
  int64 created_at = 4;
  int64 updated_at = 5;
  int64 expired_at = 6;
}

// PendFinding For upsert
message PendFindingForUpsert {
  uint64 finding_id = 1;
  uint32 project_id = 2;
  string note = 3;
  int64 expired_at = 4;
}

// FindingStatus
enum FindingStatus {
  FINDING_UNKNOWN = 0;
  FINDING_ACTIVE = 1;
  FINDING_PENDING = 2;
}

// FindingSetting
message FindingSetting {
  uint32 finding_setting_id = 1;
  uint32 project_id = 2;
  string resource_name = 3;
  string setting = 4;
  FindingSettingStatus status = 5;
  int64 created_at = 6;
  int64 updated_at = 7;
}

// FindingSettingForUpsert
message FindingSettingForUpsert {
  uint32 project_id = 1;
  string resource_name = 2;
  string setting = 3;
  FindingSettingStatus status = 4;
}

// FindingSettingStatus
enum FindingSettingStatus {
  SETTING_UNKNOWN = 0;
  SETTING_ACTIVE = 1;
  SETTING_DEACTIVE = 2;
}

// Recommend
message Recommend {
  uint64 finding_id = 1;
  uint32 recommend_id = 2;
  string data_source = 3;
  string type = 4;
  string risk = 5;
  string recommendation = 6;
  int64 created_at = 7;
  int64 updated_at = 8;
}

// RecommendForBatch
message RecommendForBatch {
  string type = 1;
  string risk = 2;
  string recommendation = 3;
}

// FindingTagForBatch
message FindingTagForBatch { string tag = 1; }

// ResourceTagForBatch
message ResourceTagForBatch { string tag = 1; }
