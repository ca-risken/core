// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.12.1
// source: finding/finding.proto

package finding

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId    []uint32 `protobuf:"varint,2,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DataSource   []string `protobuf:"bytes,3,rep,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	ResourceName []string `protobuf:"bytes,4,rep,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	FromScore    float32  `protobuf:"fixed32,5,opt,name=from_score,json=fromScore,proto3" json:"from_score,omitempty"`
	ToScore      float32  `protobuf:"fixed32,6,opt,name=to_score,json=toScore,proto3" json:"to_score,omitempty"`
	FromAt       int64    `protobuf:"varint,7,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt         int64    `protobuf:"varint,8,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListFindingRequest) Reset() {
	*x = ListFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFindingRequest) ProtoMessage() {}

func (x *ListFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFindingRequest.ProtoReflect.Descriptor instead.
func (*ListFindingRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{0}
}

func (x *ListFindingRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListFindingRequest) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *ListFindingRequest) GetDataSource() []string {
	if x != nil {
		return x.DataSource
	}
	return nil
}

func (x *ListFindingRequest) GetResourceName() []string {
	if x != nil {
		return x.ResourceName
	}
	return nil
}

func (x *ListFindingRequest) GetFromScore() float32 {
	if x != nil {
		return x.FromScore
	}
	return 0
}

func (x *ListFindingRequest) GetToScore() float32 {
	if x != nil {
		return x.ToScore
	}
	return 0
}

func (x *ListFindingRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListFindingRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindingId []uint64 `protobuf:"varint,1,rep,packed,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
}

func (x *ListFindingResponse) Reset() {
	*x = ListFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFindingResponse) ProtoMessage() {}

func (x *ListFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFindingResponse.ProtoReflect.Descriptor instead.
func (*ListFindingResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{1}
}

func (x *ListFindingResponse) GetFindingId() []uint64 {
	if x != nil {
		return x.FindingId
	}
	return nil
}

type GetFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FindingId uint64 `protobuf:"varint,2,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
}

func (x *GetFindingRequest) Reset() {
	*x = GetFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFindingRequest) ProtoMessage() {}

func (x *GetFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFindingRequest.ProtoReflect.Descriptor instead.
func (*GetFindingRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{2}
}

func (x *GetFindingRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetFindingRequest) GetFindingId() uint64 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

type GetFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Finding *Finding `protobuf:"bytes,1,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *GetFindingResponse) Reset() {
	*x = GetFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFindingResponse) ProtoMessage() {}

func (x *GetFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFindingResponse.ProtoReflect.Descriptor instead.
func (*GetFindingResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{3}
}

func (x *GetFindingResponse) GetFinding() *Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type PutFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint32            `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Finding *FindingForUpsert `protobuf:"bytes,2,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *PutFindingRequest) Reset() {
	*x = PutFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFindingRequest) ProtoMessage() {}

func (x *PutFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFindingRequest.ProtoReflect.Descriptor instead.
func (*PutFindingRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{4}
}

func (x *PutFindingRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PutFindingRequest) GetFinding() *FindingForUpsert {
	if x != nil {
		return x.Finding
	}
	return nil
}

type PutFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Finding *Finding `protobuf:"bytes,1,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *PutFindingResponse) Reset() {
	*x = PutFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFindingResponse) ProtoMessage() {}

func (x *PutFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFindingResponse.ProtoReflect.Descriptor instead.
func (*PutFindingResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{5}
}

func (x *PutFindingResponse) GetFinding() *Finding {
	if x != nil {
		return x.Finding
	}
	return nil
}

type DeleteFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FindingId uint64 `protobuf:"varint,2,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
}

func (x *DeleteFindingRequest) Reset() {
	*x = DeleteFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFindingRequest) ProtoMessage() {}

func (x *DeleteFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFindingRequest.ProtoReflect.Descriptor instead.
func (*DeleteFindingRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFindingRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteFindingRequest) GetFindingId() uint64 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

type ListFindingTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FindingId uint64 `protobuf:"varint,2,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
}

func (x *ListFindingTagRequest) Reset() {
	*x = ListFindingTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFindingTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFindingTagRequest) ProtoMessage() {}

func (x *ListFindingTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFindingTagRequest.ProtoReflect.Descriptor instead.
func (*ListFindingTagRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{7}
}

func (x *ListFindingTagRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListFindingTagRequest) GetFindingId() uint64 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

type ListFindingTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag []*FindingTag `protobuf:"bytes,1,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *ListFindingTagResponse) Reset() {
	*x = ListFindingTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFindingTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFindingTagResponse) ProtoMessage() {}

func (x *ListFindingTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFindingTagResponse.ProtoReflect.Descriptor instead.
func (*ListFindingTagResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{8}
}

func (x *ListFindingTagResponse) GetTag() []*FindingTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type TagFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32               `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Tag    *FindingTagForUpsert `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TagFindingRequest) Reset() {
	*x = TagFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagFindingRequest) ProtoMessage() {}

func (x *TagFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagFindingRequest.ProtoReflect.Descriptor instead.
func (*TagFindingRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{9}
}

func (x *TagFindingRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TagFindingRequest) GetTag() *FindingTagForUpsert {
	if x != nil {
		return x.Tag
	}
	return nil
}

type TagFindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *FindingTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TagFindingResponse) Reset() {
	*x = TagFindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagFindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagFindingResponse) ProtoMessage() {}

func (x *TagFindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagFindingResponse.ProtoReflect.Descriptor instead.
func (*TagFindingResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{10}
}

func (x *TagFindingResponse) GetTag() *FindingTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type UntagFindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FindingTagId uint64 `protobuf:"varint,2,opt,name=finding_tag_id,json=findingTagId,proto3" json:"finding_tag_id,omitempty"`
}

func (x *UntagFindingRequest) Reset() {
	*x = UntagFindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UntagFindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntagFindingRequest) ProtoMessage() {}

func (x *UntagFindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntagFindingRequest.ProtoReflect.Descriptor instead.
func (*UntagFindingRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{11}
}

func (x *UntagFindingRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UntagFindingRequest) GetFindingTagId() uint64 {
	if x != nil {
		return x.FindingTagId
	}
	return 0
}

type ListResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId    []uint32 `protobuf:"varint,2,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceName []string `protobuf:"bytes,3,rep,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	FromSumScore float32  `protobuf:"fixed32,4,opt,name=from_sum_score,json=fromSumScore,proto3" json:"from_sum_score,omitempty"`
	ToSumScore   float32  `protobuf:"fixed32,5,opt,name=to_sum_score,json=toSumScore,proto3" json:"to_sum_score,omitempty"`
	FromAt       int64    `protobuf:"varint,6,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt         int64    `protobuf:"varint,7,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListResourceRequest) Reset() {
	*x = ListResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourceRequest) ProtoMessage() {}

func (x *ListResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourceRequest.ProtoReflect.Descriptor instead.
func (*ListResourceRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{12}
}

func (x *ListResourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListResourceRequest) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *ListResourceRequest) GetResourceName() []string {
	if x != nil {
		return x.ResourceName
	}
	return nil
}

func (x *ListResourceRequest) GetFromSumScore() float32 {
	if x != nil {
		return x.FromSumScore
	}
	return 0
}

func (x *ListResourceRequest) GetToSumScore() float32 {
	if x != nil {
		return x.ToSumScore
	}
	return 0
}

func (x *ListResourceRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListResourceRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId []uint64 `protobuf:"varint,1,rep,packed,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *ListResourceResponse) Reset() {
	*x = ListResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourceResponse) ProtoMessage() {}

func (x *ListResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourceResponse.ProtoReflect.Descriptor instead.
func (*ListResourceResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{13}
}

func (x *ListResourceResponse) GetResourceId() []uint64 {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

type GetResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceId uint64 `protobuf:"varint,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *GetResourceRequest) Reset() {
	*x = GetResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceRequest) ProtoMessage() {}

func (x *GetResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceRequest.ProtoReflect.Descriptor instead.
func (*GetResourceRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{14}
}

func (x *GetResourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetResourceRequest) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

type GetResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetResourceResponse) Reset() {
	*x = GetResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceResponse) ProtoMessage() {}

func (x *GetResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceResponse.ProtoReflect.Descriptor instead.
func (*GetResourceResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{15}
}

func (x *GetResourceResponse) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type PutResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint32             `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Resource *ResourceForUpsert `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *PutResourceRequest) Reset() {
	*x = PutResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResourceRequest) ProtoMessage() {}

func (x *PutResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResourceRequest.ProtoReflect.Descriptor instead.
func (*PutResourceRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{16}
}

func (x *PutResourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PutResourceRequest) GetResource() *ResourceForUpsert {
	if x != nil {
		return x.Resource
	}
	return nil
}

type PutResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *PutResourceResponse) Reset() {
	*x = PutResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResourceResponse) ProtoMessage() {}

func (x *PutResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResourceResponse.ProtoReflect.Descriptor instead.
func (*PutResourceResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{17}
}

func (x *PutResourceResponse) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type DeleteResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceId uint64 `protobuf:"varint,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *DeleteResourceRequest) Reset() {
	*x = DeleteResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResourceRequest) ProtoMessage() {}

func (x *DeleteResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteResourceRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteResourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteResourceRequest) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

type ListResourceTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceId uint64 `protobuf:"varint,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *ListResourceTagRequest) Reset() {
	*x = ListResourceTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResourceTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourceTagRequest) ProtoMessage() {}

func (x *ListResourceTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourceTagRequest.ProtoReflect.Descriptor instead.
func (*ListResourceTagRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{19}
}

func (x *ListResourceTagRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListResourceTagRequest) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

type ListResourceTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag []*ResourceTag `protobuf:"bytes,1,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *ListResourceTagResponse) Reset() {
	*x = ListResourceTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResourceTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourceTagResponse) ProtoMessage() {}

func (x *ListResourceTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourceTagResponse.ProtoReflect.Descriptor instead.
func (*ListResourceTagResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{20}
}

func (x *ListResourceTagResponse) GetTag() []*ResourceTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type TagResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32                `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Tag    *ResourceTagForUpsert `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TagResourceRequest) Reset() {
	*x = TagResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagResourceRequest) ProtoMessage() {}

func (x *TagResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagResourceRequest.ProtoReflect.Descriptor instead.
func (*TagResourceRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{21}
}

func (x *TagResourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TagResourceRequest) GetTag() *ResourceTagForUpsert {
	if x != nil {
		return x.Tag
	}
	return nil
}

type TagResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *ResourceTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TagResourceResponse) Reset() {
	*x = TagResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagResourceResponse) ProtoMessage() {}

func (x *TagResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagResourceResponse.ProtoReflect.Descriptor instead.
func (*TagResourceResponse) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{22}
}

func (x *TagResourceResponse) GetTag() *ResourceTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type UntagResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceTagId uint64 `protobuf:"varint,2,opt,name=resource_tag_id,json=resourceTagId,proto3" json:"resource_tag_id,omitempty"`
}

func (x *UntagResourceRequest) Reset() {
	*x = UntagResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UntagResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntagResourceRequest) ProtoMessage() {}

func (x *UntagResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntagResourceRequest.ProtoReflect.Descriptor instead.
func (*UntagResourceRequest) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{23}
}

func (x *UntagResourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UntagResourceRequest) GetResourceTagId() uint64 {
	if x != nil {
		return x.ResourceTagId
	}
	return 0
}

//*
// Finding エンティティ
type Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindingId        uint64  `protobuf:"varint,1,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
	Description      string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DataSource       string  `protobuf:"bytes,3,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	ResourceName     string  `protobuf:"bytes,4,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ProjectId        string  `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OriginalScore    float32 `protobuf:"fixed32,6,opt,name=original_score,json=originalScore,proto3" json:"original_score,omitempty"`
	OriginalMaxScore float32 `protobuf:"fixed32,7,opt,name=original_max_score,json=originalMaxScore,proto3" json:"original_max_score,omitempty"`
	Score            float32 `protobuf:"fixed32,8,opt,name=score,proto3" json:"score,omitempty"`
	Data             string  `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
	CreatedAt        int64   `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        int64   `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Finding) Reset() {
	*x = Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{24}
}

func (x *Finding) GetFindingId() uint64 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

func (x *Finding) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Finding) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

func (x *Finding) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *Finding) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Finding) GetOriginalScore() float32 {
	if x != nil {
		return x.OriginalScore
	}
	return 0
}

func (x *Finding) GetOriginalMaxScore() float32 {
	if x != nil {
		return x.OriginalMaxScore
	}
	return 0
}

func (x *Finding) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Finding) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Finding) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Finding) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

//*
// Finding エンティティ（登録・更新用）
type FindingForUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description      string  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	DataSource       string  `protobuf:"bytes,2,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	ResourceName     string  `protobuf:"bytes,3,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ProjectId        uint32  `protobuf:"varint,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OriginalScore    float32 `protobuf:"fixed32,5,opt,name=original_score,json=originalScore,proto3" json:"original_score,omitempty"`
	OriginalMaxScore float32 `protobuf:"fixed32,6,opt,name=original_max_score,json=originalMaxScore,proto3" json:"original_max_score,omitempty"`
	Score            float32 `protobuf:"fixed32,7,opt,name=score,proto3" json:"score,omitempty"`
	Data             string  `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FindingForUpsert) Reset() {
	*x = FindingForUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindingForUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindingForUpsert) ProtoMessage() {}

func (x *FindingForUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindingForUpsert.ProtoReflect.Descriptor instead.
func (*FindingForUpsert) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{25}
}

func (x *FindingForUpsert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FindingForUpsert) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

func (x *FindingForUpsert) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *FindingForUpsert) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *FindingForUpsert) GetOriginalScore() float32 {
	if x != nil {
		return x.OriginalScore
	}
	return 0
}

func (x *FindingForUpsert) GetOriginalMaxScore() float32 {
	if x != nil {
		return x.OriginalMaxScore
	}
	return 0
}

func (x *FindingForUpsert) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *FindingForUpsert) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//*
// FindingTag エンティティ
type FindingTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindingTagId uint64 `protobuf:"varint,1,opt,name=finding_tag_id,json=findingTagId,proto3" json:"finding_tag_id,omitempty"`
	FindingId    uint64 `protobuf:"varint,2,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
	TagKey       string `protobuf:"bytes,3,opt,name=tag_key,json=tagKey,proto3" json:"tag_key,omitempty"`
	TagValue     string `protobuf:"bytes,4,opt,name=tag_value,json=tagValue,proto3" json:"tag_value,omitempty"`
	CreatedAt    int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FindingTag) Reset() {
	*x = FindingTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindingTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindingTag) ProtoMessage() {}

func (x *FindingTag) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindingTag.ProtoReflect.Descriptor instead.
func (*FindingTag) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{26}
}

func (x *FindingTag) GetFindingTagId() uint64 {
	if x != nil {
		return x.FindingTagId
	}
	return 0
}

func (x *FindingTag) GetFindingId() uint64 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

func (x *FindingTag) GetTagKey() string {
	if x != nil {
		return x.TagKey
	}
	return ""
}

func (x *FindingTag) GetTagValue() string {
	if x != nil {
		return x.TagValue
	}
	return ""
}

func (x *FindingTag) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FindingTag) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

//*
// FindingTag エンティティ（登録・更新用）
type FindingTagForUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindingId uint64 `protobuf:"varint,2,opt,name=finding_id,json=findingId,proto3" json:"finding_id,omitempty"`
	TagKey    string `protobuf:"bytes,3,opt,name=tag_key,json=tagKey,proto3" json:"tag_key,omitempty"`
	TagValue  string `protobuf:"bytes,4,opt,name=tag_value,json=tagValue,proto3" json:"tag_value,omitempty"`
}

func (x *FindingTagForUpsert) Reset() {
	*x = FindingTagForUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindingTagForUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindingTagForUpsert) ProtoMessage() {}

func (x *FindingTagForUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindingTagForUpsert.ProtoReflect.Descriptor instead.
func (*FindingTagForUpsert) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{27}
}

func (x *FindingTagForUpsert) GetFindingId() uint64 {
	if x != nil {
		return x.FindingId
	}
	return 0
}

func (x *FindingTagForUpsert) GetTagKey() string {
	if x != nil {
		return x.TagKey
	}
	return ""
}

func (x *FindingTagForUpsert) GetTagValue() string {
	if x != nil {
		return x.TagValue
	}
	return ""
}

//*
// Resource エンティティ
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId   uint64 `protobuf:"varint,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceName string `protobuf:"bytes,2,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ProjectId    uint32 `protobuf:"varint,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CreatedAt    int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{28}
}

func (x *Resource) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *Resource) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *Resource) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Resource) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Resource) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

//*
// Resource エンティティ（登録・更新用）
type ResourceForUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ProjectId    uint32 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ResourceForUpsert) Reset() {
	*x = ResourceForUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceForUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceForUpsert) ProtoMessage() {}

func (x *ResourceForUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceForUpsert.ProtoReflect.Descriptor instead.
func (*ResourceForUpsert) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{29}
}

func (x *ResourceForUpsert) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ResourceForUpsert) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

//*
// ResourceTag エンティティ
type ResourceTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceTagId uint64 `protobuf:"varint,1,opt,name=resource_tag_id,json=resourceTagId,proto3" json:"resource_tag_id,omitempty"`
	ResourceId    uint64 `protobuf:"varint,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	TagKey        string `protobuf:"bytes,3,opt,name=tag_key,json=tagKey,proto3" json:"tag_key,omitempty"`
	TagValue      string `protobuf:"bytes,4,opt,name=tag_value,json=tagValue,proto3" json:"tag_value,omitempty"`
	CreatedAt     int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ResourceTag) Reset() {
	*x = ResourceTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTag) ProtoMessage() {}

func (x *ResourceTag) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTag.ProtoReflect.Descriptor instead.
func (*ResourceTag) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{30}
}

func (x *ResourceTag) GetResourceTagId() uint64 {
	if x != nil {
		return x.ResourceTagId
	}
	return 0
}

func (x *ResourceTag) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *ResourceTag) GetTagKey() string {
	if x != nil {
		return x.TagKey
	}
	return ""
}

func (x *ResourceTag) GetTagValue() string {
	if x != nil {
		return x.TagValue
	}
	return ""
}

func (x *ResourceTag) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ResourceTag) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

//*
// ResourceTag エンティティ（登録・更新用）
type ResourceTagForUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId uint64 `protobuf:"varint,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	TagKey     string `protobuf:"bytes,2,opt,name=tag_key,json=tagKey,proto3" json:"tag_key,omitempty"`
	TagValue   string `protobuf:"bytes,3,opt,name=tag_value,json=tagValue,proto3" json:"tag_value,omitempty"`
}

func (x *ResourceTagForUpsert) Reset() {
	*x = ResourceTagForUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTagForUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTagForUpsert) ProtoMessage() {}

func (x *ResourceTagForUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTagForUpsert.ProtoReflect.Descriptor instead.
func (*ResourceTagForUpsert) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{31}
}

func (x *ResourceTagForUpsert) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *ResourceTagForUpsert) GetTagKey() string {
	if x != nil {
		return x.TagKey
	}
	return ""
}

func (x *ResourceTagForUpsert) GetTagValue() string {
	if x != nil {
		return x.TagValue
	}
	return ""
}

//*
// Empty 空メッセージ
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finding_finding_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_finding_finding_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_finding_finding_proto_rawDescGZIP(), []int{32}
}

var File_finding_finding_proto protoreflect.FileDescriptor

var file_finding_finding_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x02,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x78, 0x40, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf,
	0x1f, 0x03, 0x78, 0xc8, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x42, 0x16, 0xe2, 0xdf, 0x1f, 0x12, 0x49, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x52,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x6f,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x42, 0x16, 0xe2, 0xdf,
	0x1f, 0x12, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xf0, 0x3f, 0x52, 0x07, 0x74, 0x6f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x22, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x09, 0x66, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07,
	0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x66, 0x0a,
	0x11, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x66,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x07, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x45, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x66,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x56, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0a, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x20, 0x01, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x44, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x22, 0x61, 0x0a, 0x11, 0x54, 0x61, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x40, 0x0a, 0x12, 0x54, 0x61, 0x67, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x5c, 0x0a, 0x13, 0x55, 0x6e, 0x74, 0x61,
	0x67, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x67, 0x49, 0x64, 0x22, 0xa1, 0x02, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x78, 0xc8, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x75, 0x6d,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x42, 0x16, 0xe2, 0xdf,
	0x1f, 0x12, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xf0, 0x3f, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x75, 0x6d, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x73, 0x75, 0x6d, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x42, 0x16, 0xe2, 0xdf, 0x1f, 0x12, 0x49, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f,
	0x52, 0x0a, 0x74, 0x6f, 0x53, 0x75, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x37, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6a, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
	0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x59, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x63, 0x0a, 0x12,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x61, 0x67, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x22, 0x42, 0x0a, 0x13, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x5f, 0x0a, 0x14, 0x55, 0x6e, 0x74, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x61, 0x67, 0x49, 0x64, 0x22, 0xec, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0xc8, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x78, 0x40, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x42, 0x16, 0xe2, 0xdf, 0x1f, 0x12,
	0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x59, 0x40, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x44, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x42, 0x16, 0xe2,
	0xdf, 0x1f, 0x12, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x59, 0x40, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4d,
	0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x42, 0x16, 0xe2, 0xdf, 0x1f, 0x12, 0x49, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc5, 0x01, 0x0a, 0x0a, 0x46, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67,
	0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x20, 0x01, 0x78, 0x40, 0x52, 0x06, 0x74, 0x61, 0x67,
	0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0xc8, 0x01, 0x52,
	0x08, 0x74, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5f, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x2b,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x0b, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x12, 0x27, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x74, 0x61, 0x67,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04,
	0x20, 0x01, 0x78, 0x41, 0x52, 0x06, 0x74, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x09,
	0x74, 0x61, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x78, 0xc9, 0x01, 0x52, 0x08, 0x74, 0x61, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x8f, 0x09, 0x0a, 0x0e,
	0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5b,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67,
	0x12, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x54,
	0x61, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x46, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0c,
	0x55, 0x6e, 0x74, 0x61, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x6e, 0x74, 0x61,
	0x67, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x5e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x0b, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x55, 0x6e, 0x74, 0x61, 0x67, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x55, 0x6e, 0x74, 0x61, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x31, 0x5a,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x79, 0x62, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x69, 0x6d, 0x6f, 0x73, 0x61, 0x2d, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_finding_finding_proto_rawDescOnce sync.Once
	file_finding_finding_proto_rawDescData = file_finding_finding_proto_rawDesc
)

func file_finding_finding_proto_rawDescGZIP() []byte {
	file_finding_finding_proto_rawDescOnce.Do(func() {
		file_finding_finding_proto_rawDescData = protoimpl.X.CompressGZIP(file_finding_finding_proto_rawDescData)
	})
	return file_finding_finding_proto_rawDescData
}

var file_finding_finding_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_finding_finding_proto_goTypes = []interface{}{
	(*ListFindingRequest)(nil),      // 0: core.finding.ListFindingRequest
	(*ListFindingResponse)(nil),     // 1: core.finding.ListFindingResponse
	(*GetFindingRequest)(nil),       // 2: core.finding.GetFindingRequest
	(*GetFindingResponse)(nil),      // 3: core.finding.GetFindingResponse
	(*PutFindingRequest)(nil),       // 4: core.finding.PutFindingRequest
	(*PutFindingResponse)(nil),      // 5: core.finding.PutFindingResponse
	(*DeleteFindingRequest)(nil),    // 6: core.finding.DeleteFindingRequest
	(*ListFindingTagRequest)(nil),   // 7: core.finding.ListFindingTagRequest
	(*ListFindingTagResponse)(nil),  // 8: core.finding.ListFindingTagResponse
	(*TagFindingRequest)(nil),       // 9: core.finding.TagFindingRequest
	(*TagFindingResponse)(nil),      // 10: core.finding.TagFindingResponse
	(*UntagFindingRequest)(nil),     // 11: core.finding.UntagFindingRequest
	(*ListResourceRequest)(nil),     // 12: core.finding.ListResourceRequest
	(*ListResourceResponse)(nil),    // 13: core.finding.ListResourceResponse
	(*GetResourceRequest)(nil),      // 14: core.finding.GetResourceRequest
	(*GetResourceResponse)(nil),     // 15: core.finding.GetResourceResponse
	(*PutResourceRequest)(nil),      // 16: core.finding.PutResourceRequest
	(*PutResourceResponse)(nil),     // 17: core.finding.PutResourceResponse
	(*DeleteResourceRequest)(nil),   // 18: core.finding.DeleteResourceRequest
	(*ListResourceTagRequest)(nil),  // 19: core.finding.ListResourceTagRequest
	(*ListResourceTagResponse)(nil), // 20: core.finding.ListResourceTagResponse
	(*TagResourceRequest)(nil),      // 21: core.finding.TagResourceRequest
	(*TagResourceResponse)(nil),     // 22: core.finding.TagResourceResponse
	(*UntagResourceRequest)(nil),    // 23: core.finding.UntagResourceRequest
	(*Finding)(nil),                 // 24: core.finding.Finding
	(*FindingForUpsert)(nil),        // 25: core.finding.FindingForUpsert
	(*FindingTag)(nil),              // 26: core.finding.FindingTag
	(*FindingTagForUpsert)(nil),     // 27: core.finding.FindingTagForUpsert
	(*Resource)(nil),                // 28: core.finding.Resource
	(*ResourceForUpsert)(nil),       // 29: core.finding.ResourceForUpsert
	(*ResourceTag)(nil),             // 30: core.finding.ResourceTag
	(*ResourceTagForUpsert)(nil),    // 31: core.finding.ResourceTagForUpsert
	(*Empty)(nil),                   // 32: core.finding.Empty
}
var file_finding_finding_proto_depIdxs = []int32{
	24, // 0: core.finding.GetFindingResponse.finding:type_name -> core.finding.Finding
	25, // 1: core.finding.PutFindingRequest.finding:type_name -> core.finding.FindingForUpsert
	24, // 2: core.finding.PutFindingResponse.finding:type_name -> core.finding.Finding
	26, // 3: core.finding.ListFindingTagResponse.tag:type_name -> core.finding.FindingTag
	27, // 4: core.finding.TagFindingRequest.tag:type_name -> core.finding.FindingTagForUpsert
	26, // 5: core.finding.TagFindingResponse.tag:type_name -> core.finding.FindingTag
	28, // 6: core.finding.GetResourceResponse.resource:type_name -> core.finding.Resource
	29, // 7: core.finding.PutResourceRequest.resource:type_name -> core.finding.ResourceForUpsert
	28, // 8: core.finding.PutResourceResponse.resource:type_name -> core.finding.Resource
	30, // 9: core.finding.ListResourceTagResponse.tag:type_name -> core.finding.ResourceTag
	31, // 10: core.finding.TagResourceRequest.tag:type_name -> core.finding.ResourceTagForUpsert
	30, // 11: core.finding.TagResourceResponse.tag:type_name -> core.finding.ResourceTag
	0,  // 12: core.finding.FindingService.ListFinding:input_type -> core.finding.ListFindingRequest
	2,  // 13: core.finding.FindingService.GetFinding:input_type -> core.finding.GetFindingRequest
	4,  // 14: core.finding.FindingService.PutFinding:input_type -> core.finding.PutFindingRequest
	6,  // 15: core.finding.FindingService.DeleteFinding:input_type -> core.finding.DeleteFindingRequest
	7,  // 16: core.finding.FindingService.ListFindingTag:input_type -> core.finding.ListFindingTagRequest
	9,  // 17: core.finding.FindingService.TagFinding:input_type -> core.finding.TagFindingRequest
	11, // 18: core.finding.FindingService.UntagFinding:input_type -> core.finding.UntagFindingRequest
	12, // 19: core.finding.FindingService.ListResource:input_type -> core.finding.ListResourceRequest
	14, // 20: core.finding.FindingService.GetResource:input_type -> core.finding.GetResourceRequest
	16, // 21: core.finding.FindingService.PutResource:input_type -> core.finding.PutResourceRequest
	18, // 22: core.finding.FindingService.DeleteResource:input_type -> core.finding.DeleteResourceRequest
	19, // 23: core.finding.FindingService.ListResourceTag:input_type -> core.finding.ListResourceTagRequest
	21, // 24: core.finding.FindingService.TagResource:input_type -> core.finding.TagResourceRequest
	23, // 25: core.finding.FindingService.UntagResource:input_type -> core.finding.UntagResourceRequest
	1,  // 26: core.finding.FindingService.ListFinding:output_type -> core.finding.ListFindingResponse
	3,  // 27: core.finding.FindingService.GetFinding:output_type -> core.finding.GetFindingResponse
	5,  // 28: core.finding.FindingService.PutFinding:output_type -> core.finding.PutFindingResponse
	32, // 29: core.finding.FindingService.DeleteFinding:output_type -> core.finding.Empty
	8,  // 30: core.finding.FindingService.ListFindingTag:output_type -> core.finding.ListFindingTagResponse
	10, // 31: core.finding.FindingService.TagFinding:output_type -> core.finding.TagFindingResponse
	32, // 32: core.finding.FindingService.UntagFinding:output_type -> core.finding.Empty
	13, // 33: core.finding.FindingService.ListResource:output_type -> core.finding.ListResourceResponse
	15, // 34: core.finding.FindingService.GetResource:output_type -> core.finding.GetResourceResponse
	17, // 35: core.finding.FindingService.PutResource:output_type -> core.finding.PutResourceResponse
	32, // 36: core.finding.FindingService.DeleteResource:output_type -> core.finding.Empty
	20, // 37: core.finding.FindingService.ListResourceTag:output_type -> core.finding.ListResourceTagResponse
	22, // 38: core.finding.FindingService.TagResource:output_type -> core.finding.TagResourceResponse
	32, // 39: core.finding.FindingService.UntagResource:output_type -> core.finding.Empty
	26, // [26:40] is the sub-list for method output_type
	12, // [12:26] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_finding_finding_proto_init() }
func file_finding_finding_proto_init() {
	if File_finding_finding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_finding_finding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFindingTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFindingTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagFindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UntagFindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResourceTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResourceTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UntagResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindingForUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindingTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindingTagForUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceForUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTagForUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finding_finding_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_finding_finding_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_finding_finding_proto_goTypes,
		DependencyIndexes: file_finding_finding_proto_depIdxs,
		MessageInfos:      file_finding_finding_proto_msgTypes,
	}.Build()
	File_finding_finding_proto = out.File
	file_finding_finding_proto_rawDesc = nil
	file_finding_finding_proto_goTypes = nil
	file_finding_finding_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FindingServiceClient is the client API for FindingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FindingServiceClient interface {
	// fiding
	ListFinding(ctx context.Context, in *ListFindingRequest, opts ...grpc.CallOption) (*ListFindingResponse, error)
	GetFinding(ctx context.Context, in *GetFindingRequest, opts ...grpc.CallOption) (*GetFindingResponse, error)
	PutFinding(ctx context.Context, in *PutFindingRequest, opts ...grpc.CallOption) (*PutFindingResponse, error)
	DeleteFinding(ctx context.Context, in *DeleteFindingRequest, opts ...grpc.CallOption) (*Empty, error)
	ListFindingTag(ctx context.Context, in *ListFindingTagRequest, opts ...grpc.CallOption) (*ListFindingTagResponse, error)
	TagFinding(ctx context.Context, in *TagFindingRequest, opts ...grpc.CallOption) (*TagFindingResponse, error)
	UntagFinding(ctx context.Context, in *UntagFindingRequest, opts ...grpc.CallOption) (*Empty, error)
	// resource
	ListResource(ctx context.Context, in *ListResourceRequest, opts ...grpc.CallOption) (*ListResourceResponse, error)
	GetResource(ctx context.Context, in *GetResourceRequest, opts ...grpc.CallOption) (*GetResourceResponse, error)
	PutResource(ctx context.Context, in *PutResourceRequest, opts ...grpc.CallOption) (*PutResourceResponse, error)
	DeleteResource(ctx context.Context, in *DeleteResourceRequest, opts ...grpc.CallOption) (*Empty, error)
	ListResourceTag(ctx context.Context, in *ListResourceTagRequest, opts ...grpc.CallOption) (*ListResourceTagResponse, error)
	TagResource(ctx context.Context, in *TagResourceRequest, opts ...grpc.CallOption) (*TagResourceResponse, error)
	UntagResource(ctx context.Context, in *UntagResourceRequest, opts ...grpc.CallOption) (*Empty, error)
}

type findingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFindingServiceClient(cc grpc.ClientConnInterface) FindingServiceClient {
	return &findingServiceClient{cc}
}

func (c *findingServiceClient) ListFinding(ctx context.Context, in *ListFindingRequest, opts ...grpc.CallOption) (*ListFindingResponse, error) {
	out := new(ListFindingResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/ListFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) GetFinding(ctx context.Context, in *GetFindingRequest, opts ...grpc.CallOption) (*GetFindingResponse, error) {
	out := new(GetFindingResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/GetFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) PutFinding(ctx context.Context, in *PutFindingRequest, opts ...grpc.CallOption) (*PutFindingResponse, error) {
	out := new(PutFindingResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/PutFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) DeleteFinding(ctx context.Context, in *DeleteFindingRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/DeleteFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) ListFindingTag(ctx context.Context, in *ListFindingTagRequest, opts ...grpc.CallOption) (*ListFindingTagResponse, error) {
	out := new(ListFindingTagResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/ListFindingTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) TagFinding(ctx context.Context, in *TagFindingRequest, opts ...grpc.CallOption) (*TagFindingResponse, error) {
	out := new(TagFindingResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/TagFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) UntagFinding(ctx context.Context, in *UntagFindingRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/UntagFinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) ListResource(ctx context.Context, in *ListResourceRequest, opts ...grpc.CallOption) (*ListResourceResponse, error) {
	out := new(ListResourceResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/ListResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) GetResource(ctx context.Context, in *GetResourceRequest, opts ...grpc.CallOption) (*GetResourceResponse, error) {
	out := new(GetResourceResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/GetResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) PutResource(ctx context.Context, in *PutResourceRequest, opts ...grpc.CallOption) (*PutResourceResponse, error) {
	out := new(PutResourceResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/PutResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) DeleteResource(ctx context.Context, in *DeleteResourceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/DeleteResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) ListResourceTag(ctx context.Context, in *ListResourceTagRequest, opts ...grpc.CallOption) (*ListResourceTagResponse, error) {
	out := new(ListResourceTagResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/ListResourceTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) TagResource(ctx context.Context, in *TagResourceRequest, opts ...grpc.CallOption) (*TagResourceResponse, error) {
	out := new(TagResourceResponse)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/TagResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *findingServiceClient) UntagResource(ctx context.Context, in *UntagResourceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/core.finding.FindingService/UntagResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FindingServiceServer is the server API for FindingService service.
type FindingServiceServer interface {
	// fiding
	ListFinding(context.Context, *ListFindingRequest) (*ListFindingResponse, error)
	GetFinding(context.Context, *GetFindingRequest) (*GetFindingResponse, error)
	PutFinding(context.Context, *PutFindingRequest) (*PutFindingResponse, error)
	DeleteFinding(context.Context, *DeleteFindingRequest) (*Empty, error)
	ListFindingTag(context.Context, *ListFindingTagRequest) (*ListFindingTagResponse, error)
	TagFinding(context.Context, *TagFindingRequest) (*TagFindingResponse, error)
	UntagFinding(context.Context, *UntagFindingRequest) (*Empty, error)
	// resource
	ListResource(context.Context, *ListResourceRequest) (*ListResourceResponse, error)
	GetResource(context.Context, *GetResourceRequest) (*GetResourceResponse, error)
	PutResource(context.Context, *PutResourceRequest) (*PutResourceResponse, error)
	DeleteResource(context.Context, *DeleteResourceRequest) (*Empty, error)
	ListResourceTag(context.Context, *ListResourceTagRequest) (*ListResourceTagResponse, error)
	TagResource(context.Context, *TagResourceRequest) (*TagResourceResponse, error)
	UntagResource(context.Context, *UntagResourceRequest) (*Empty, error)
}

// UnimplementedFindingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFindingServiceServer struct {
}

func (*UnimplementedFindingServiceServer) ListFinding(context.Context, *ListFindingRequest) (*ListFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFinding not implemented")
}
func (*UnimplementedFindingServiceServer) GetFinding(context.Context, *GetFindingRequest) (*GetFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFinding not implemented")
}
func (*UnimplementedFindingServiceServer) PutFinding(context.Context, *PutFindingRequest) (*PutFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutFinding not implemented")
}
func (*UnimplementedFindingServiceServer) DeleteFinding(context.Context, *DeleteFindingRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFinding not implemented")
}
func (*UnimplementedFindingServiceServer) ListFindingTag(context.Context, *ListFindingTagRequest) (*ListFindingTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFindingTag not implemented")
}
func (*UnimplementedFindingServiceServer) TagFinding(context.Context, *TagFindingRequest) (*TagFindingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TagFinding not implemented")
}
func (*UnimplementedFindingServiceServer) UntagFinding(context.Context, *UntagFindingRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UntagFinding not implemented")
}
func (*UnimplementedFindingServiceServer) ListResource(context.Context, *ListResourceRequest) (*ListResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResource not implemented")
}
func (*UnimplementedFindingServiceServer) GetResource(context.Context, *GetResourceRequest) (*GetResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResource not implemented")
}
func (*UnimplementedFindingServiceServer) PutResource(context.Context, *PutResourceRequest) (*PutResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutResource not implemented")
}
func (*UnimplementedFindingServiceServer) DeleteResource(context.Context, *DeleteResourceRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteResource not implemented")
}
func (*UnimplementedFindingServiceServer) ListResourceTag(context.Context, *ListResourceTagRequest) (*ListResourceTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceTag not implemented")
}
func (*UnimplementedFindingServiceServer) TagResource(context.Context, *TagResourceRequest) (*TagResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TagResource not implemented")
}
func (*UnimplementedFindingServiceServer) UntagResource(context.Context, *UntagResourceRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UntagResource not implemented")
}

func RegisterFindingServiceServer(s *grpc.Server, srv FindingServiceServer) {
	s.RegisterService(&_FindingService_serviceDesc, srv)
}

func _FindingService_ListFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).ListFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/ListFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).ListFinding(ctx, req.(*ListFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_GetFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).GetFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/GetFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).GetFinding(ctx, req.(*GetFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_PutFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).PutFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/PutFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).PutFinding(ctx, req.(*PutFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_DeleteFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).DeleteFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/DeleteFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).DeleteFinding(ctx, req.(*DeleteFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_ListFindingTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFindingTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).ListFindingTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/ListFindingTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).ListFindingTag(ctx, req.(*ListFindingTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_TagFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).TagFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/TagFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).TagFinding(ctx, req.(*TagFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_UntagFinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UntagFindingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).UntagFinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/UntagFinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).UntagFinding(ctx, req.(*UntagFindingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_ListResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).ListResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/ListResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).ListResource(ctx, req.(*ListResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_GetResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).GetResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/GetResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).GetResource(ctx, req.(*GetResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_PutResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).PutResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/PutResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).PutResource(ctx, req.(*PutResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_DeleteResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).DeleteResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/DeleteResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).DeleteResource(ctx, req.(*DeleteResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_ListResourceTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).ListResourceTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/ListResourceTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).ListResourceTag(ctx, req.(*ListResourceTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_TagResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).TagResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/TagResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).TagResource(ctx, req.(*TagResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FindingService_UntagResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UntagResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FindingServiceServer).UntagResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.finding.FindingService/UntagResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FindingServiceServer).UntagResource(ctx, req.(*UntagResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FindingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.finding.FindingService",
	HandlerType: (*FindingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListFinding",
			Handler:    _FindingService_ListFinding_Handler,
		},
		{
			MethodName: "GetFinding",
			Handler:    _FindingService_GetFinding_Handler,
		},
		{
			MethodName: "PutFinding",
			Handler:    _FindingService_PutFinding_Handler,
		},
		{
			MethodName: "DeleteFinding",
			Handler:    _FindingService_DeleteFinding_Handler,
		},
		{
			MethodName: "ListFindingTag",
			Handler:    _FindingService_ListFindingTag_Handler,
		},
		{
			MethodName: "TagFinding",
			Handler:    _FindingService_TagFinding_Handler,
		},
		{
			MethodName: "UntagFinding",
			Handler:    _FindingService_UntagFinding_Handler,
		},
		{
			MethodName: "ListResource",
			Handler:    _FindingService_ListResource_Handler,
		},
		{
			MethodName: "GetResource",
			Handler:    _FindingService_GetResource_Handler,
		},
		{
			MethodName: "PutResource",
			Handler:    _FindingService_PutResource_Handler,
		},
		{
			MethodName: "DeleteResource",
			Handler:    _FindingService_DeleteResource_Handler,
		},
		{
			MethodName: "ListResourceTag",
			Handler:    _FindingService_ListResourceTag_Handler,
		},
		{
			MethodName: "TagResource",
			Handler:    _FindingService_TagResource_Handler,
		},
		{
			MethodName: "UntagResource",
			Handler:    _FindingService_UntagResource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "finding/finding.proto",
}
